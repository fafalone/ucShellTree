'This module contains all ucShellTree interfaces, types, enums, and APIs from oleexp.tlb and OLEGuids

[ InterfaceId ("000214E6-0000-0000-C000-000000000046") ]
Interface IShellFolder Extends stdole.IUnknown
    [ PreserveSig ] Function ParseDisplayName(ByVal hwndOwner As LongPtr, ByVal pbc As LongPtr, ByVal lpszDisplayName As LongPtr, pchEaten As Long, ppidl As LongPtr, pdwAttributes As Long) As Long
    [ PreserveSig ] Function EnumObjects(ByVal hwndOwner As LongPtr, ByVal grfFlags As SHCONTF, ppEnumIdList As IEnumIDList) As Long
    [ PreserveSig ] Function BindToObject(ByVal pidl As LongPtr, ByVal pbc As LongPtr, riid As UUID, ppvOut As Any) As Long
    [ PreserveSig ] Function BindToStorage(ByVal pidl As LongPtr, ByVal pbc As LongPtr, riid As UUID, ppvOut As Any) As Long
    [ PreserveSig ] Function CompareIDs(ByVal lParam As LongPtr, ByVal pidl1 As LongPtr, ByVal pidl2 As LongPtr) As Long
    [ PreserveSig ] Function CreateViewObject(ByVal hwndOwner As LongPtr, riid As UUID, ppvOut As Any) As Long
    [ PreserveSig ] Function GetAttributesOf(ByVal cidl As Long, apidl As LongPtr, rgfInOut As SFGAO_Flags) As Long
    [ PreserveSig ] Function GetUIObjectOf(ByVal hwndOwner As LongPtr, ByVal cidl As Long, apidl As LongPtr, riid As UUID, rgfReserved As Long, ppvOut As Any) As Long
    [ PreserveSig ] Function GetDisplayNameOf(ByVal pidl As LongPtr, ByVal uFlags As SHGNO_Flags, lpName As STRRET) As Long
    [ PreserveSig ] Function SetNameOf(ByVal hwndOwner As LongPtr, ByVal pidl As LongPtr, ByVal lpszName As LongPtr, ByVal uFlags As SHGNO_Flags, ppidlOut As LongPtr) As Long
End Interface
[ InterfaceId ("93F2F68C-1D1B-11d3-A30E-00C04F79ABD1") ]
Interface IShellFolder2 Extends IShellFolder
    [ PreserveSig ] Function GetDefaultSearchGUID(pguid As UUID) As Long
    [ PreserveSig ] Function EnumSearches(ppEnum As IEnumExtraSearch) As Long
    [ PreserveSig ] Function GetDefaultColumn(ByVal dwRes As Long, pSort As Long, pDisplay As Long) As Long
    [ PreserveSig ] Function GetDefaultCOlumnState(ByVal iColumn As Long, pcsFlags As SHCOLSTATEF) As Long
    [ PreserveSig ] Function GetDetailsEx(ByVal pidl As LongPtr, pscid As SHCOLUMNID, pv As Variant) As Long
    [ PreserveSig ] Function GetDetailsOf(ByVal pidl As LongPtr, ByVal iColumn As Long, psd As SHELLDETAILS) As Long
    [ PreserveSig ] Function MapColumnToSCID(ByVal iColumn As Long, pscid As SHCOLUMNID) As Long
End Interface

[ InterfaceId ("43826D1E-E718-42EE-BC55-A1E261C37BFE") ]
Interface IShellItem Extends stdole.IUnknown
    [ PreserveSig ] Function BindToHandler(ByVal pbc As LongPtr, rbhid As UUID, riid As UUID, ppvOut As any) As Long
    [ PreserveSig ] Function GetParent(ppsi As IShellItem) As Long
    [ PreserveSig ] Function GetDisplayName(ByVal sigdnName As SIGDN, ppszName As LongPtr) As Long
    [ PreserveSig ] Function GetAttributes(ByVal sfgaoMask As SFGAO_Flags, psfgaoAttributes As SFGAO_Flags) As Long
    [ PreserveSig ] Function Compare(ByVal psi As IShellItem, ByVal hint As SICHINTF, piOrder As Long) As Long
End Interface
[ InterfaceId ("7e9fb0d3-919f-4307-ab2e-9b1860310c93") ]
Interface IShellItem2 Extends IShellItem
    [ PreserveSig ] Function GetPropertyStore(ByVal flags As GETPROPERTYSTOREFLAGS, riid As UUID, ppv As any) As Long
    [ PreserveSig ] Function GetPropertyStoreWithCreateObject(ByVal flags As GETPROPERTYSTOREFLAGS, ByVal pUnk As IUnknownUnrestricted, riid As UUID, ppv As any) As Long
    [ PreserveSig ] Function GetPropertyStoreForKeys(rgKeys As PROPERTYKEY, ByVal cKeys As Long, ByVal flags As GETPROPERTYSTOREFLAGS, riid As UUID, ppv As any) As Long
    [ PreserveSig ] Function GetPropertyDescriptionList(keyType As PROPERTYKEY, riid As UUID, ppv As any) As Long
    [ PreserveSig ] Function Update(ByVal pbc As IBindCtx) As Long
    [ PreserveSig ] Function GetProperty(key As PROPERTYKEY, ppropvar As Variant) As Long
    [ PreserveSig ] Function GetCLSID(key As PROPERTYKEY, pclsid As CLSID) As Long
    [ PreserveSig ] Function GetFileTime(key As PROPERTYKEY, pft As FILETIME) As Long
    [ PreserveSig ] Function GetInt32(key As PROPERTYKEY, pi As Long) As Long
    [ PreserveSig ] Function GetString(key As PROPERTYKEY, ppsz As LongPtr) As Long
    [ PreserveSig ] Function GetUInt32(key As PROPERTYKEY, pui As Long) As Long
    [ PreserveSig ] Function GetUInt64(key As PROPERTYKEY, pull As LongLong) As Long
    [ PreserveSig ] Function GetBool(key As PROPERTYKEY, pf As Long) As Long
End Interface
[ InterfaceId ("b63ea76d-1f85-456f-a19c-48159efa858b") ]
Interface IShellItemArray Extends stdole.IUnknown
    Sub BindToHandler(ByVal pbc As LongPtr, bhid As UUID, riid As UUID, ppvOut As any)
    Sub GetPropertyStore(ByVal flags As GETPROPERTYSTOREFLAGS, riid As UUID, ppv As any)
    Sub GetPropertyDescriptionList(keytype As PROPERTYKEY, riid As UUID, ppv As any)
    Sub GetAttributes(ByVal AttribFlags As SIATTRIBFLAGS, ByVal sfgaoMask As SFGAO_Flags, psfgaoAttribs As SFGAO_Flags)
    Sub GetCount(pdwNumItems As Long)
    Sub GetItemAt(ByVal dwIndex As Long, ppsi As IShellItem)
    Sub EnumItems(ppenumShellItems As IEnumShellItems)
End Interface

[ InterfaceId ("11a66efa-382e-451a-9234-1e0e12ef3085") ]
Interface IShellLibrary Extends stdole.IUnknown
    [ PreserveSig ] Function LoadLibraryFromItem(ByVal psiLibrary As IShellItem, ByVal grfMode As STGM) As Long
    [ PreserveSig ] Function LoadLibraryFromKnownFolder(kfidLibrary As UUID, ByVal grfMode As STGM) As Long
    [ PreserveSig ] Function AddFolder(ByVal psiLocation As IShellItem) As Long
    [ PreserveSig ] Function RemoveFolder(ByVal psiLocation As IShellItem) As Long
    [ PreserveSig ] Function GetFolders(ByVal lff As LIBRARYFOLDERFILTER, riid As UUID, ppv As any) As Long
    [ PreserveSig ] Function ResolveFolders(ByVal psiFolderToResolve As IShellItem, ByVal dwTimeout As Long, riid As UUID, ppv As any) As Long
    [ PreserveSig ] Function GetDefaultSaveFolder(ByVal dsft As DEFAULTSAVEFOLDERTYPE, riid As UUID, ppv As any) As Long
    [ PreserveSig ] Function SetDefaultSaveFolder(ByVal dsft As DEFAULTSAVEFOLDERTYPE, ByVal psi As IShellItem) As Long
    [ PreserveSig ] Function GetOptions(plofOptions As LIBRARYOPTIONFLAGS) As Long
    [ PreserveSig ] Function SetOptions(ByVal lofMask As LIBRARYOPTIONFLAGS, ByVal lofOptions As LIBRARYOPTIONFLAGS) As Long
    [ PreserveSig ] Function GetFolderType(pftid As UUID) As Long
    [ PreserveSig ] Function SetFolderType(ftid As UUID) As Long
    [ PreserveSig ] Function GetIcon(ppszIcon As LongPtr) As Long
    [ PreserveSig ] Function SetIcon(ByVal pszIcon As LongPtr) As Long
    [ PreserveSig ] Function Commit() As Long
    [ PreserveSig ] Function Save(ByVal psiFolderToSaveIn As IShellItem, ByVal pszLibraryName As LongPtr, ByVal lsf As LIBRARYSAVEFLAGS, ppsiSavedTo As IShellItem) As Long
    [ PreserveSig ] Function SaveInKnownFolder(kfidToSaveIn As UUID, ByVal pszLibraryName As LongPtr, ByVal lsf As LIBRARYSAVEFLAGS, ppsiSavedTo As IShellItem) As Long
End Interface

[ InterfaceId ("bcc18b79-ba16-442f-80c4-8a59c30c463b") ]
Interface IShellItemImageFactory Extends stdole.iunknown
    [ PreserveSig ] Function GetImage(ByVal cxy As LongLong, ByVal flags As SIIGBF, phbm As LongPtr) As Long
End Interface

[ InterfaceId ("000214E5-0000-0000-C000-000000000046") ]
Interface IShellIcon Extends stdole.IUnknown
    Sub GetIconOf(ByVal pidl As LongPtr, ByVal flags As GILFlags, lpIconIndex As IconIndexes)
End Interface

[ InterfaceId ("7d688a70-c613-11d0-999b-00c04fd655e1") ]
Interface IShellIconOverlay Extends stdole.IUnknown
    Sub GetOverlayIndex(ByVal pidlRel As LongPtr, pIndex As Long)
    Sub GetOverlayIconIndex(ByVal pidlRel As LongPtr, pIndex As Long)
End Interface

[ InterfaceId ("00021500-0000-0000-C000-000000000046") ]
Interface IQueryInfo Extends stdole.IUnknown
    Sub GetInfoTip(ByVal dwFlags As QITipFlags, ppwszTip As LongPtr)
    Sub GetInfoFlags(pdwFlags As QITipFlags)
End Interface

[ InterfaceId ("b3a4b685-b685-4805-99d9-5dead2873236") ]
Interface IParentAndItem Extends stdole.IUnknown
    Sub SetParentAndItem(ByVal pidlParent As LongPtr, ByVal psf As IShellFolder, ByVal pidlChild As LongPtr)
    Sub GetParentAndItem(ppidlParent As LongPtr, ppsf As IShellFolder, ppidlChild As LongPtr)
End Interface

[ InterfaceId ("6f79d558-3e96-4549-a1d1-7d75d2288814") ]
Interface IPropertyDescription Extends stdole.IUnknown
    Sub GetPropertyKey(pkey As PROPERTYKEY)
    Sub GetCanonicalName(ppszName As LongPtr)
    Sub GetPropertyType(pvartype As Integer)
    Sub GetDisplayName(ppszName As LongPtr)
    Sub GetEditInvitation(ppszInvite As LongPtr)
    Sub GetTypeFlags(ByVal mask As PROPDESC_TYPE_FLAGS, ppdtFlags As PROPDESC_TYPE_FLAGS)
    Sub GetViewFlags(ppdvFlags As PROPDESC_VIEW_FLAGS)
    Sub GetDefaultColumnWidth(pcxChars As Long)
    Sub GetDisplayType(pdisplaytype As PROPDESC_DISPLAYTYPE)
    Sub GetColumnState(pcsFlags As SHCOLSTATEF)
    Sub GetGroupingRange(pgr As PROPDESC_GROUPING_RANGE)
    Sub GetRelativeDescriptionType(prdt As PROPDESC_RELATIVEDESCRIPTION_TYPE)
    Sub GetRelativeDescription(propvar1 As Variant, propvar2 As Variant, ppszDesc1 As LongPtr, ppszDesc2 As LongPtr)
    Sub GetSortDescription(psd As PROPDESC_SORTDESCRIPTION)
    Sub GetSortDescriptionLabel(ByVal fDescending As Long, ppszDescription As LongPtr)
    Sub GetAggregationType(paggType As PROPDESC_AGGREGATION_TYPE)
    Sub GetConditionType(pcontype As PROPDESC_CONDITION_TYPE, popDefault As CONDITION_OPERATION)
    Sub GetEnumTypeList(riid As UUID, ppv As any)
    Sub CoerceToCanonicalValue(ppropvar As Variant)
    Sub FormatForDisplay(propvar As Variant, ByVal pdfFlags As PROPDESC_FORMAT_FLAGS, ppszDisplay As LongPtr)
    Sub IsValueCanonical(propvar As Variant)
End Interface
[ InterfaceId ("57d2eded-5062-400e-b107-5dae79fe57a6") ]
Interface IPropertyDescription2 Extends IPropertyDescription
    Sub GetImageReferenceForValue(propvar As Variant, ppszImageRes As LongPtr)
End Interface
[ InterfaceId ("f67104fc-2af9-46fd-b32d-243c1404f3d1") ]
Interface IPropertyDescriptionAliasInfo Extends IPropertyDescription
    Sub GetSortByAlias(riid As UUID, ppv As any)
    Sub GetAdditionalSortByAliases(riid As UUID, ppv As any)
End Interface
[ InterfaceId ("1f9fc1d0-c39b-4b26-817f-011967d3440e") ]
Interface IPropertyDescriptionList Extends stdole.IUnknown
    Sub GetCount(pcElem As Long)
    Sub GetAt(ByVal iElem As Long, riid As UUID, ppv As any)
End Interface
[ InterfaceId ("ca724e8a-c3e6-442b-88a4-6fb0db8035a3") ]
Interface IPropertySystem Extends stdole.IUnknown
    Sub GetPropertyDescription(propkey As PROPERTYKEY, riid As UUID, ppv As any)
    Sub GetPropertyDescriptionByName(ByVal pszCanonicalName As LongPtr, riid As UUID, ppv As any)
    Sub GetPropertyDescriptionListFromString(ByVal pszPropList As LongPtr, riid As UUID, ppv As any)
    Sub EnumeratePropertyDescriptions(ByVal filterOn As PROPDESC_ENUMFILTER, riid As UUID, ppv As any)
    Sub FormatForDisplay(key As PROPERTYKEY, propvar As Variant, ByVal pdff As PROPDESC_FORMAT_FLAGS, pszText As LongPtr, ByVal cchText As Long)
    Sub FormatForDisplayAlloc(key As PROPERTYKEY, propvar As Variant, ByVal pdff As PROPDESC_FORMAT_FLAGS, pszText As LongPtr)
    Sub RegisterPropertySchema(ByVal pszPath As LongPtr)
    Sub UnregisterPropertySchema(ByVal pszPath As LongPtr)
    Sub RefreshPropertySchema()
End Interface

[ InterfaceId ("886d8eeb-8cf2-4446-8d02-cdba1dbdcf99") ]
Interface IPropertyStore Extends stdole.IUnknown
    [ PreserveSig ] Function GetCount(cProps As Long) As Long
    [ PreserveSig ] Function GetAt(ByVal iProp As Long, pkey As PROPERTYKEY) As Long
    [ PreserveSig ] Function GetValue(key As PROPERTYKEY, pv As Variant) As Long
    [ PreserveSig ] Function SetValue(key As PROPERTYKEY, propvar As Variant) As Long
    [ PreserveSig ] Function Commit() As Long
End Interface

[ InterfaceId ("4657278B-411B-11D2-839A-00C04FD918D0") ]
Interface IDropTargetHelper Extends stdole.IUnknown
    Sub DragEnter(ByVal hwndTarget As LongPtr, ByVal pDataObject As IDataObject, ppt As POINT, ByVal dwEffect As DROPEFFECTS)
    Sub DragLeave()
    Sub DragOver(ppt As POINT, ByVal dwEffect As DROPEFFECTS)
    Sub Drop(ByVal pDataObject As IDataObject, ppt As POINT, ByVal dwEffect As DROPEFFECTS)
    Sub Show(ByVal fShow As Long)
End Interface

[ InterfaceId ("DE5BF786-477A-11D2-839D-00C04FD918D0") ]
Interface IDragSourceHelper Extends stdole.IUnknown
    Sub InitializeFromBitmap(pshdi As SHDRAGIMAGE, pDataObject As IDataObject)
    Sub InitializeFromWindow(ByVal hwnd As LongPtr, ppt As POINT, pDataObject As IDataObject)
End Interface

[ InterfaceId ("83E07D0D-0C5F-4163-BF1A-60B274051E40") ]
Interface IDragSourceHelper2 Extends IDragSourceHelper
	Sub SetFlags(ByVal dwFlags As DSH_FLAGS)
End Interface

[ InterfaceId ("00000122-0000-0000-C000-000000000046") ]
Interface IDropTarget Extends stdole.IUnknown
    Sub DragEnter(ByVal pDataObject As IDataObject, ByVal grfKeyState As Long, ByVal pt As LongLong, pdwEffect As DROPEFFECTS)
    Sub DragOver(ByVal grfKeyState As Long, ByVal pt As LongLong, pdwEffect As DROPEFFECTS)
    Sub DragLeave()
    Sub Drop(ByVal pDataObj As IDataObject, ByVal grfKeyState As Long, ByVal pt As LongLong, pdwEffect As DROPEFFECTS)
End Interface

[ InterfaceId ("00000121-0000-0000-C000-000000000046") ]
Interface IDropSource Extends stdole.IUnknown
    Sub QueryContinueDrag(ByVal fEscape As Long)
    Sub GiveFeedback(ByVal grfKeyState As Long)
End Interface

[ InterfaceId ("46EB5926-582E-4017-9FDF-E8998DAA0950") ]
Interface IImageList Extends stdole.IUnknown
    Sub Add(ByVal hbmImage As LongPtr, ByVal hbmMask As LongPtr, pi As Long)
    Sub ReplaceIcon(ByVal i As Long, ByVal hIcon As LongPtr, pi As Long)
    Sub SetOverlayImage(ByVal iImage As Long, ByVal iOverlay As Long)
    Sub Replace(ByVal i As Long, ByVal hbmImage As LongPtr, ByVal hbmMask As LongPtr)
    Sub AddMasked(ByVal hbmImage As LongPtr, ByVal crMask As Long, pi As Long)
    Sub Draw(pimldp As IMAGELISTDRAWPARAMS)
    Sub Remove(ByVal i As Long)
    Sub GetIcon(ByVal i As Long, ByVal flags As IMAGELISTDRAWFLAGS, pIcon As LongPtr)
    Sub GetImageInfo(ByVal i As Long, pImageInfo As IMAGEINFO)
    Sub Copy(ByVal iDst As Long, ByVal pUnkSrc As stdole.IUnknown, ByVal iSrc As Long, ByVal uFlags As Long)
    Sub Merge(ByVal i1 As Long, ByVal punk2 As stdole.IUnknown, ByVal i2 As Long, ByVal dx As Long, ByVal dy As Long, riid As UUID, ppv As any)
    Sub Clone(riid As UUID, ppv As any)
    Sub GetImageRect(ByVal i As Long, prc As RECT)
    Sub GetIconSize(cx As Long, cy As Long)
    Sub SetIconSize(ByVal cx As Long, ByVal cy As Long)
    Sub GetImageCount(pi As Long)
    Sub SetImageCount(ByVal uNewCount As Long)
    Sub SetBkColor(ByVal clrBk As Long, pclr As Long)
    Sub GetBkColor(pclr As Long)
    Sub BeginDrag(ByVal iTrack As Long, ByVal dxHotspot As Long, ByVal dyHotspot As Long)
    Sub EndDrag()
    Sub DragEnter(ByVal hwndLock As LongPtr, ByVal x As Long, ByVal y As Long)
    Sub DragLeave(ByVal hwndLock As Long)
    Sub DragMove(ByVal x As Long, ByVal y As Long)
    Sub SetDragCursorImage(ByVal pUnk As stdole.IUnknown, ByVal iDrag As Long, ByVal dxHotspot As Long, ByVal dyHotspot As Long)
    Sub DragShowNolock(ByVal fShow As Long)
    Sub GetDragImage(ppt As POINT, pptHotspot As POINT, riid As UUID, ppv As any)
    Sub GetItemFlags(ByVal i As Long, dwFlags As Long)
    Sub GetOverlayImage(ByVal iOverlay As Long, piIndex As Long)
End Interface

[ InterfaceId ("000214F9-0000-0000-C000-000000000046") ]
Interface IShellLinkW Extends stdole.IUnknown
    Sub GetPath(ByVal pszFile As LongPtr, ByVal cch As Long, pfd As WIN32_FIND_DATAW, ByVal fFlags As SLGP_FLAGS)
    Function GetIDList() As LongPtr
    Sub SetIDList(ByVal pidl As LongPtr)
    Sub GetDescription(ByVal pszName As LongPtr, ByVal cch As Long)
    Sub SetDescription(ByVal pszName As LongPtr)
    Sub GetWorkingDirectory(ByVal pszDir As LongPtr, ByVal cch As Long)
    Sub SetWorkingDirectory(ByVal pszDir As LongPtr)
    Sub GetArguments(ByVal pszArgs As LongPtr, ByVal cch As Long)
    Sub SetArguments(ByVal pszArgs As LongPtr)
    Function GetHotkey() As Integer
    Sub SetHotkey(ByVal wHotkey As Integer)
    Function GetShowCmd() As Long
    Sub SetShowCmd(ByVal iShowCmd As Long)
    Sub GetIconLocation(ByVal pszIconPath As LongPtr, ByVal cch As Long, piIcon As Long)
    Sub SetIconLocation(ByVal pszIconPath As LongPtr, ByVal iIcon As Long)
    Sub SetRelativePath(ByVal pszPathRel As LongPtr, ByVal dwReserved As Long)
    Sub Resolve(ByVal hwnd As LongPtr, ByVal fFlags As SLR_FLAGS)
    Sub SetPath(ByVal pszFile As LongPtr)
End Interface

[ InterfaceId ("000214E4-0000-0000-C000-000000000046") ]
Interface IContextMenu Extends stdole.IUnknown
    Sub QueryContextMenu(ByVal hMenu As LongPtr, ByVal indexMenu As Long, ByVal idCmdFIrst As Long, ByVal idCmdLast As Long, ByVal uFlags As QueryContextMenuFlags)
    Sub InvokeCommand(ByVal lpici As LongPtr)
    Sub GetCommandString(ByVal idCmd As Long, ByVal uType As GetCommandStringFlags, pwReserved As Long, ByVal pszName As LongPtr, ByVal cchMax As Long)
End Interface

[ InterfaceId ("000214F4-0000-0000-C000-000000000046") ]
Interface IContextMenu2 Extends IContextMenu
    Sub HandleMenuMsg(ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr)
End Interface

[ InterfaceId ("BCFCE0A0-EC17-11d0-8D10-00A0C90F2719") ]
Interface IContextMenu3 Extends IContextMenu2
    Sub HandleMenuMsg2(ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr, plResult As LongPtr)
End Interface

[ InterfaceId ("3AA7AF7E-9B36-420c-A8E3-F77D4674A488") ]
Interface IKnownFolder Extends stdole.IUnknown
    Sub GetId(pkfid As UUID)
    Sub GetCategory(pCategory As KF_CATEGORY)
    Sub GetShellItem(ByVal dwFlags As KNOWN_FOLDER_FLAG, riid As UUID, ppv As any)
    Sub GetPath(ByVal dwFlags As KNOWN_FOLDER_FLAG, ppszPath As LongPtr)
    Sub SetPath(ByVal dwFlags As KNOWN_FOLDER_FLAG, ByVal pszPath As LongPtr)
    Sub GetIDList(ByVal dwFlags As KNOWN_FOLDER_FLAG, ppidl As LongPtr)
    Sub GetFolderType(pftid As UUID)
    Sub GetRedirectionCapabilities(pCapabilities As KF_REDIRECTION_CAPABILITIES)
    Sub GetFolderDefinition(pKFD As KNOWNFOLDER_DEFINITION)
End Interface

[ InterfaceId ("8BE2D872-86AA-4d47-B776-32CCA40C7018") ]
Interface IKnownFolderManager Extends stdole.IUnknown
    Sub FolderIdFromCsidl(ByVal nCsidl As Long, pfid As UUID)
    Sub FolderIdToCsidl(rfid As UUID, pnCsidl As Long)
    Sub GetFolderIds(ppKfid As LongPtr, pCount As Long)
    Sub GetFolder(rfid As UUID, ppkf As IKnownFolder)
    Sub GetFolderByName(ByVal pszCanonicalName As LongPtr, ppkf As IKnownFolder)
    Sub RegisterFolder(rfid As UUID, pKFD As KNOWNFOLDER_DEFINITION)
    Sub UnregisterFolder(rfid As UUID)
    Sub FindFolderFromPath(ByVal pszPath As LongPtr, ByVal mode As FFFP_MODE, ppkf As IKnownFolder)
    Sub FindFolderFromIDList(ByVal pidl As LongPtr, ppkf As IKnownFolder)
    Sub Redirect(rfid As UUID, ByVal hwnd As LongPtr, ByVal flags As KF_REDIRECT_FLAGS, ByVal pszTargetPath As LongPtr, ByVal cFolders As Long, pExclusion As UUID, ppszError As LongPtr)
End Interface

[ InterfaceId ("04b0f1a7-9490-44bc-96e1-4296a31252e2") ]
Interface IFileOperationProgressSink Extends stdole.IUnknown
    Sub StartOperations()
    Sub FinishOperations(ByVal hrResult As Long)
    Sub PreRenameItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem, ByVal pszNewName As LongPtr)
    Sub PostRenameItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem, ByVal pszNewName As LongPtr, ByVal hrRename As Long, ByVal psiNewlyCreated As IShellItem)
    Sub PreMoveItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem, ByVal psiDestinationFolder As IShellItem, ByVal pszNewName As LongPtr)
    Sub PostMoveItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem, ByVal psiDestinationFolder As IShellItem, ByVal pszNewName As LongPtr, ByVal hrMove As Long, ByVal psiNewlyCreated As IShellItem)
    Sub PreCopyItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem, ByVal psiDestinationFolder As IShellItem, ByVal pszNewName As LongPtr)
    Sub PostCopyItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem, ByVal psiDestinationFolder As IShellItem, ByVal pszNewName As LongPtr, ByVal hrCopy As Long, ByVal psiNewlyCreated As IShellItem)
    Sub PreDeleteItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem)
    Sub PostDeleteItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem, ByVal hrDelete As Long, ByVal psiNewlyCreated As IShellItem)
    Sub PreNewItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiDestinationFolder As IShellItem, ByVal pszNewName As LongPtr)
    Sub PostNewItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiDestinationFolder As IShellItem, ByVal pszNewName As LongPtr, ByVal pszTemplateName As LongPtr, ByVal hrNew As Long, ByVal psiNewItem As IShellItem)
    Sub UpdateProgress(ByVal iWorkTotal As Long, ByVal iWorkSoFar As Long)
    Sub ResetTimer()
    Sub PauseTimer()
    Sub ResumeTimer()
End Interface

[ InterfaceId ("947aab5f-0a5c-4c13-b4d6-4bf7836fc9f8") ]
Interface IFileOperation Extends stdole.IUnknown
    Sub Advise(ByVal pfops As IFileOperationProgressSink, pdwCookie As Long)
    Sub UnAdvise(ByVal dwCookie As Long)
    Sub SetOperationFlags(ByVal dwOperationFlags As IFO_Flags)
    Sub SetProgressMessage(ByVal pszMessage As LongPtr)
    Sub SetProgressDialog(ByVal popd As IOperationsProgressDialog)
    Sub SetProperties(ByVal pproparray As IPropertyChangeArray)
    Sub SetOwnerWindow(ByVal hwndOwner As LongPtr)
    Sub ApplyPropertiesToItem(ByVal psiItem As IShellItem)
    Sub ApplyPropertiesToItems(ByVal punkItems As stdole.IUnknown)
    Sub RenameItem(ByVal psiItem As IShellItem, ByVal pszNewName As LongPtr, pfopsItem As Any)
    Sub RenameItems(ByVal pUnkItems As stdole.IUnknown, ByVal pszNewName As LongPtr)
    Sub MoveItem(ByVal psiItem As IShellItem, ByVal psiDestinationFolder As IShellItem, ByVal pszNewName As LongPtr, pfopsItem As Any)
    Sub MoveItems(ByVal pUnkItems As stdole.IUnknown, ByVal psiDestinationFolder As IShellItem)
    Sub CopyItem(ByVal psiItem As IShellItem, ByVal psiDestinationFolder As IShellItem, ByVal pszCopyName As LongPtr, pfopsItem As Any)
    Sub CopyItems(ByVal pUnkItems As stdole.IUnknown, ByVal psiDestinationFolder As IShellItem)
    Sub DeleteItem(ByVal psiItem As IShellItem, ByVal pfopsItem As IFileOperationProgressSink)
    Sub DeleteItems(ByVal pUnkItems As stdole.IUnknown)
    Sub NewItem(ByVal psiDestinationFolder As IShellItem, ByVal dwFileAttributes As Long, ByVal pszName As LongPtr, ByVal pszTemplateName As LongPtr, pfopsItem As Any)
    Sub PerformOperations()
    Sub GetAnyOperationsAborted(pfAnyOperationsAborted As Long)
End Interface

[ InterfaceId ("0C9FB851-E5C9-43EB-A370-F0677B13874C") ]
Interface IOperationsProgressDialog Extends stdole.IUnknown
    Sub StartProgressDialog(ByVal hwndOwner As LongPtr, ByVal flags As OPPROGDLGF)
    Sub StopProgressDialog()
    Sub SetOperation(ByVal action As SPACTION)
    Sub SetMode(ByVal mode As PDMODE)
    Sub UpdateProgress(ByVal ullPointsCurrent As LongLong, ByVal ullPointsTotal As LongLong, ByVal ullSizeCurrent As LongLong, ByVal ullSizeTotal As LongLong, ByVal ullItemCurrent As LongLong, ByVal ullItemsTotal As LongLong)
    Sub UpdateLocation(ByVal psiSource As IShellItem, ByVal psiTarget As IShellItem, ByVal psiItem As IShellItem)
    Sub ResetTimer()
    Sub PauseTimer()
    Sub ResumeTimer()
    Sub GetMilliseconds(pullElapsed As LongLong, pullRemaining As LongLong)
    Sub GetOperationStatus(popStatus As PDOPSTATUS)
End Interface

[ InterfaceId ("fc0ca0a7-c316-4fd2-9031-3e628e6d4f23") ]
Interface IObjectWithPropertyKey Extends stdole.IUnknown
    Sub SetPropertyKey(key As PROPERTYKEY)
    Sub GetPropertyKey(key As PROPERTYKEY)
End Interface

[ InterfaceId ("f917bc8a-1bba-4478-a245-1bde03eb9431") ]
Interface IPropertyChange Extends IObjectWithPropertyKey
    Sub ApplyToPropVariant(pvarIn As Variant, ppropvarOut As Variant)
End Interface

[ InterfaceId ("380f5cad-1b5e-42f2-805d-637fd392d31e") ]
Interface IPropertyChangeArray Extends stdole.IUnknown
    Sub GetCount(pcOperations As Long)
    Sub GetAt(ByVal iIndex As Long, riid As UUID, ppv As any)
    Sub InsertAt(ByVal iIndex As Long, ByVal ppropChange As IPropertyChange)
    Sub Append(ByVal ppropChange As IPropertyChange)
    Sub RemoveAt(ByVal iIndex As Long)
    Sub IsKeyInArray(key As PROPERTYKEY)
End Interface

[ InterfaceId ("A1567595-4C2F-4574-A6FA-ECEF917B9A40") ]
Interface IPortableDeviceManager Extends stdole.IUnknown
    Sub GetDevices(ByVal pPnPDeviceIDs As LongPtr, pcPnPDeviceIDs As Long)
    Sub RefreshDeviceList()
    Sub GetDeviceFriendlyName(ByVal pszPnPDeviceID As LongPtr, ByVal pDeviceFriendlyName As LongPtr, pcchDeviceFriendlyName As Long)
    Sub GetDeviceDescription(ByVal pszPnPDeviceID As LongPtr, ByVal pDeviceDescription As LongPtr, pcchDeviceDescription As Long)
    Sub GetDeviceManufacturer(ByVal pszPnPDeviceID As LongPtr, ByVal pDeviceManufacturer As LongPtr, pcchDeviceManufacturer As Long)
    Sub GetDeviceProperty(ByVal psPnPDeviceID As LongPtr, ByVal pszDevicePropertyName As LongPtr, ByVal pData As LongPtr, pcbData As Long, pdwType As Long)
    Sub GetPrivateDevices(ByVal pPnPDeviceIDs As LongPtr, pcPnPDeviceIDs As Long)
End Interface


[ InterfaceId ("0000010f-0000-0000-C000-000000000046") ]
Interface IAdviseSink Extends stdole.IUnknown
	Sub OnDataChange(pFormatEtc As FORMATETC, pStgMed As STGMEDIUM)
    Sub OnViewChange(dwAspect As DVASPECT, ByVal lindex As Long)
    Sub OnRename(ByVal pmk As LongPtr) 'As IMoniker
    Sub OnSave()
    Sub OnClose()
End Interface

[ InterfaceId ("00000103-0000-0000-C000-000000000046") ]
Interface IEnumFormatETC Extends stdole.IUnknown
    Sub Next(ByVal celt As Long, rgelt As FORMATETC, pceltFetched As Long)
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumFormatETC)
End Interface

[ InterfaceId ("000214F2-0000-0000-C000-000000000046") ]
Interface IEnumIDList Extends stdole.IUnknown
    [ PreserveSig ] Function Next(ByVal celt As Long, rgelt As LongPtr, pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumIDList)
End Interface

[ InterfaceId ("70629033-e363-4a28-a567-0db78006e6d7") ]
Interface IEnumShellItems Extends stdole.IUnknown
    [ PreserveSig ] Function Next(ByVal celt As Long, rgelt As IShellItem, pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumShellItems)
End Interface

[ InterfaceId ("0E700BE1-9DB6-11d1-A1CE-00C04FD75D13") ]
Interface IEnumExtraSearch Extends stdole.IUnknown
    [ PreserveSig ] Function Next(ByVal celt As Long, rgelt As EXTRASEARCH, pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumExtraSearch)
End Interface

[ InterfaceId ("00000105-0000-0000-C000-000000000046") ]
Interface IEnumSTATDATA Extends stdole.IUnknown
    Sub Next(ByVal celt As Long, rgelt As STATDATA, pceltFetched As Long)
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumSTATDATA)
End Interface

[ InterfaceId ("00000101-0000-0000-C000-000000000046") ]
Interface IEnumString Extends stdole.IUnknown
    Sub Next(ByVal celt As Long, rgelt As LongPtr, pceltFetched As Long)
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumString)
End Interface

[ InterfaceId ("00000102-0000-0000-C000-000000000046") ]
Interface IEnumMoniker Extends stdole.IUnknown
    Sub Next(ByVal celt As Long, rgelt As IMoniker, pceltFetched As Long)
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumMoniker)
End Interface

[ InterfaceId ("0000010E-0000-0000-C000-000000000046") ]
Interface IDataObject Extends stdole.IUnknown
    [ PreserveSig ] Function GetData(pFormatEtcIn As FORMATETC, pMedium As STGMEDIUM) As Long
    [ PreserveSig ] Function GetDataHere(pFormatEtc As FORMATETC, pMedium As STGMEDIUM) As Long
    [ PreserveSig ] Function QueryGetData(pFormatEtc As FORMATETC) As Long
    Sub GetCanonicalFormatEtc(pFormatEtcIn As FORMATETC, pFormatEtcOut As FORMATETC)
    [ PreserveSig ] Function SetData(pFormatEtc As FORMATETC, pMedium As STGMEDIUM, ByVal fRelease As Long) As Long
    Function EnumFormatEtc(ByVal dwDirection As DATADIR) As IEnumFormatETC
    Sub DAdvise(pFormatEtc As FORMATETC, ByVal advf As ADVF, pAdvSink As IAdviseSink)
    Sub DUnadvise(ByVal dwConnection As Long)
    Function EnumDAdvise() As IEnumSTATDATA
End Interface

[ InterfaceId ("0c733a30-2a1c-11ce-ade5-00aa0044773d") ]
Interface ISequentialStream Extends stdole.IUnknown
    Function Read(pv As any, ByVal cb As Long) As Long
    Function Write(pv As any, ByVal cb As Long) As Long
End Interface
[ InterfaceId ("0000000c-0000-0000-C000-000000000046") ]
Interface IStream Extends ISequentialStream
    Function Seek(ByVal dlibMove As LongLong, ByVal dwOrigin As Long) As LongLong
    Sub SetSize(ByVal libNewSize As LongLong)
    Sub CopyTo(ByVal pStm As IStream, ByVal cb As LongLong, pcbRead As LongLong, pcbWritten As LongLong)
    Sub Commit(ByVal grfCommitFlags As STGC)
    Sub Revert()
    Sub LockRegion(ByVal libOffset As LongLong, ByVal cb As LongLong, ByVal dwLockType As Long)
    Sub Stat(pstatstg As STATSTG, ByVal grfStatFlag As STATFLAG)
    Function Clone() As IStream
End Interface

[ InterfaceId ("0000010c-0000-0000-C000-000000000046") ]
Interface IPersist Extends stdole.IUnknown
    Sub GetClassID(pClassID As UUID)
End Interface
[ InterfaceId ("00000109-0000-0000-C000-000000000046") ]
Interface IPersistStream Extends IPersist
    Sub IsDirty()
    Sub Load(ByVal pStm As IStream)
    Sub Save(ByVal pStm As IStream, ByVal fClearDirty As Long)
    Function GetSizeMax() As LongLong
End Interface
[ InterfaceId ("1079acfc-29bd-11d3-8e0d-00c04f6837d5") ]
Interface IPersistIDList Extends stdole.IUnknown
    Sub GetClassID(pClassID As UUID)
    Sub SetIDList(ByVal pidl As LongPtr)
    Sub GetIDList(pidl As LongPtr)
End Interface


[ InterfaceId ("0000000e-0000-0000-C000-000000000046") ]
Interface IBindCtx Extends stdole.IUnknown
    Sub RegisterBoundObject(ByVal punk As stdole.IUnknown)
    Sub RevokeBoundObject(ByVal punk As stdole.IUnknown)
    Sub ReleaseBoundObjects()
    Sub SetBindOptions(pbindopts As BIND_OPTS)
    Sub GetBindOptions(pbindopts As BIND_OPTS)
    Function GetRunningObjectTable() As IRunningObjectTable
    Sub RegisterObjectParam(ByVal pszKey As LongPtr, ByVal pUnk As stdole.IUnknown)
    Function GetObjectParam(ByVal pszKey As LongPtr) As stdole.IUnknown
    Function EnumObjectParam() As IEnumString
    Sub RevokeObjectParam(ByVal pszKey As LongPtr)
End Interface

[ InterfaceId ("0000000f-0000-0000-C000-000000000046") ]
Interface IMoniker Extends IPersistStream
    Sub BindToObject(ByVal pbc As IBindCtx, ByVal pmkToLeft As IMoniker, riidResult As UUID, ppvResult As any)
    Sub BindToStorage(ByVal pbc As IBindCtx, ByVal pmkToLeft As IMoniker, riid As UUID, ppvObj As any)
    Function Reduce(ByVal pbc As IBindCtx, ByVal dwReduceHowFar As Long, ppmkToLeft As IMoniker) As IMoniker
    Function CompositeWith(ByVal pmkRight As IMoniker, ByVal fOnlyIfNotGeneric As Long) As IMoniker
    Function Enum(ByVal fForward As Long) As IEnumMoniker
    Function Hash() As Long
    Sub IsRunning(ByVal pbc As LongPtr, ByVal pmkToLeft As LongPtr, ByVal pmkNewlyRunning As LongPtr)
    Function GetTimeOfLastChange(ByVal pbc As IBindCtx, ByVal pmkToLeft As IMoniker) As LongLong
    Function Inverse() As IMoniker
    Function CommonPrefixWith(ByVal pmkOther As IMoniker) As IMoniker
    Function RelativePathTo(ByVal pmkOther As IMoniker) As IMoniker
    Function GetDisplayName(ByVal pbc As LongPtr, ByVal pmkToLeft As LongPtr) As LongPtr
    Function ParseDisplayName(ByVal pbc As IBindCtx, ByVal pmkToLeft As IMoniker, ByVal pszDisplayName As LongPtr, pchEaten As Long) As IMoniker
    Function IsSystemMoniker() As Long
End Interface

[ InterfaceId ("00000010-0000-0000-C000-000000000046") ]
Interface IRunningObjectTable Extends stdole.IUnknown
    Function Register(ByVal grfFlags As ROTFLAGS, ByVal pUnkObjects As stdole.IUnknown, ByVal pmkObjectName As IMoniker) As Long
    Sub Revoke(ByVal dwRegister As Long)
    Sub IsRunning(ByVal pmkObjectName As IMoniker)
    Function GetObject(ByVal pmkObjectName As IMoniker) As stdole.IUnknown
    Sub NoteChangeTime(ByVal dwRegister As Long, pFileTime As LongLong)
    Function GetTimeOfLastChange(ByVal pmkObjectName As IMoniker) As LongLong
    Function EnumRunning() As IEnumMoniker
End Interface

[ InterfaceId ("00000100-0000-0000-C000-000000000046") ]
Interface IEnumUnknown Extends stdole.IUnknown
    Sub Next(ByVal celt As Long, rgelt As stdole.IUnknown, pceltFetched As Long)
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Function Clone() As IEnumUnknown
End Interface

[ InterfaceId ("00000114-0000-0000-C000-000000000046") ]
Interface IOleWindow Extends stdole.IUnknown
    Function GetWindow() As LongPtr
    Sub ContextSensitiveHelp(ByVal fEnterMode As Long)
End Interface
[ InterfaceId ("00000115-0000-0000-C000-000000000046") ]
Interface IOleInPlaceUIWindow Extends IOleWindow
    Sub GetBorder(ByVal lpRectBorder As LongPtr)
    Sub RequestBorderSpace(ByVal pBorderWidths As LongPtr)
    Sub SetBorderSpace(ByVal pBorderWidths As LongPtr)
    Sub SetActiveObject(ByVal pActiveObject As IOleInPlaceActiveObject, ByVal pszObjectName As String)
End Interface
[ InterfaceId ("00000117-0000-0000-C000-000000000046") ]
Interface IOleInPlaceActiveObject Extends IUnknownUnrestricted
    Sub GetWindow(phWnd As LongPtr)
    Sub ContextSensitiveHelp(ByVal fEnterMode As Long)
    Sub TranslateAccelerator(ByVal lpMsg As LongPtr)
    Sub OnFrameWindowActivate(ByVal fActivate As Long)
    Sub OnDocWindowActivate(ByVal fActivate As Long)
    Sub ResizeBorder(ByVal lpRectBorder As LongPtr, ByVal pUIWindow As IOleInPlaceUIWindow, ByVal fFrameWindow As Long)
    Sub EnableModeless(ByVal fEnable As Long)
End Interface
[ InterfaceId ("38584260-0CFB-45E7-8FBB-5D20B311F5B8") ]
Interface IOleInPlaceActiveObjectVB Extends IDispatch
    Sub TranslateAccelerator(Handled As Boolean, RetVal As Long, ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr, ByVal Shift As Long)
End Interface

[ InterfaceId ("0000011a-0000-0000-C000-000000000046") ]
Interface IParseDisplayName Extends stdole.IUnknown
    Sub ParseDisplayName(ByVal pbc As IBindCtx, ByVal pszDisplayName As LongPtr, pchEaten As Long, ppmkOut As IMoniker)
End Interface

[ InterfaceId ("0000011b-0000-0000-C000-000000000046") ]
Interface IOleContainer Extends IParseDisplayName
    Sub EnumObjects(ByVal grfFlags As Long, ppenum As IEnumUnknown)
    Sub LockContainer(ByVal fLock As Long)
End Interface

[ InterfaceId ("00000104-0000-0000-C000-000000000046") ]
Interface IEnumOLEVERB Extends stdole.IUnknown
    Sub Next(ByVal celt As Long, rgelt As LongPtr, pceltFetched As Long)
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumOLEVERB)
End Interface


[ InterfaceId ("00000118-0000-0000-C000-000000000046") ]
Interface IOleClientSite Extends stdole.IUnknown
    Sub SaveObject()
    Sub GetMoniker(ByVal dwAssign As Long, ByVal dwWhichMoniker As Long, ppmk As IMoniker)
    Sub GetContainer(ppContainer As IOleContainer)
    Sub ShowObject()
    Sub OnShowWindow(ByVal fShow As Long)
    Sub RequestNewObjectLayout()
End Interface

[ InterfaceId ("00000112-0000-0000-C000-000000000046") ]
Interface IOleObject Extends stdole.IUnknown
    Sub SetClientSite(ByVal pClientSite As IOleClientSite)
    Function GetClientSite() As IOleClientSite
    Sub SetHostNames(ByVal szContainerApp As LongPtr, ByVal szontainerObj As LongPtr)
    Sub Close(ByVal dwSaveOption As Long)
    Sub SetMoniker(ByVal dwWhichMoniker As Long, ByVal pmk As IMoniker)
    Sub GetMoniker(ByVal dwAssign As Long, ByVal dwWhichMoniker As Long, ppmk As IMoniker)
    Sub InitFromData(ByVal pDataObject As IDataObject, ByVal fCreation As Long, ByVal dwReserved As Long)
    Sub GetClipboardData(ByVal dwReserved As Long, ppDataObject As IDataObject)
    Sub DoVerb(ByVal iVerb As Long, lpmsg As MSG, ByVal pActiveSite As IOleClientSite, ByVal lindex As Long, ByVal hwndParent As LongPtr, lprcPosRect As RECT)
    Sub EnumVerbs(ppEnumOleVerb As IEnumOLEVERB)
    Sub Update()
    Sub IsUpToDate()
    Sub GetUserClassID(pClsid As UUID)
    Sub GetUserType(ByVal dwFormOfType, pszUserType As LongPtr)
    Sub SetExtent(ByVal dwDrawAspect As Long, psizel As SIZE)
    Sub GetExtent(ByVal dwDrawAspect As Long, psizel As SIZE)
    Sub Advise(ByVal pAdvSink As IAdviseSink, pdwConnection As Long)
    Sub Unadvise(ByVal dwConnection As Long)
    Sub EnumAdvise(ppenumAdvise As IEnumSTATDATA)
    Sub GetMiscStatus(ByVal dwAspect As Long, pdwStatus As Long)
    Sub SetColorScheme(pLogpal As LOGPALETTE)
End Interface

[ InterfaceId ("00000116-0000-0000-C000-000000000046") ]
Interface IOleInPlaceFrame Extends IOleInPlaceUIWindow
    Sub InsertMenus(ByVal hMenuShared As LongPtr, lpMenuWidths As OleMenuGroupWidths)
    Sub SetMenu(ByVal hMenuShared As LongPtr, ByVal holeMenu As LongPtr, ByVal hwndActiveObject As LongPtr)
    Sub RemoveMenus(ByVal hMenuShared As LongPtr)
    Sub SetStatusText(ByVal pszStatusText As LongPtr)
    Sub EnableModeless(ByVal fEnable As Long)
    Sub TranslateAccelerator(lpmsg As MSG, ByVal wID As Integer)
End Interface

[ InterfaceId ("00000119-0000-0000-C000-000000000046") ]
Interface IOleInPlaceSite Extends IOleWindow
    Sub CanInPlaceActivate()
    Sub OnInPlaceActivate()
    Sub OnUIActivate()
    Sub GetWindowContext(ppFrame As IOleInPlaceFrame, ppDoc As IOleInPlaceUIWindow, ByVal lprcPosRect As LongPtr, ByVal lprcClipRect As LongPtr, ByVal lpFrameInfo As LongPtr)
    Sub Scroll(scrollExtant As LongLong)
    Sub OnUIDeactivate(ByVal fUndoable As Long)
    Sub OnInPlaceDeactivate()
    Sub DiscardUndoState()
    Sub DeactivateAndUndo()
    Sub OnPosRectChange(lprcPosRect As RECT)
End Interface

[ InterfaceId ("CB5BDC81-93C1-11CF-8F20-00805F2CD064") ]
Interface IObjectSafety Extends stdole.IUnknown
    Sub GetInterfaceSafetyOptions(riid As UUID, pdwSupportedOptions As Long, pdwEnabledOptions As Long)
    Sub SetInterfaceSafetyOptions(riid As UUID, ByVal dwOptionSetMask As Long, ByVal dwEnabledOptions As Long)
End Interface

[ InterfaceId ("00000000-0000-0000-C000-000000000046") ]
Interface IUnknownUnrestricted Extends Nothing
    [ PreserveSig ] Function QueryInterface(riid As UUID, ppvObject As any) As Long
    [ PreserveSig ] Function AddRef() As Long
    [ PreserveSig ] Function Release() As Long
End Interface

'CLSID_DragDropHelper 
[ CoClassId ("4657278A-411B-11D2-839A-00C04FD918D0") ]
CoClass DragDropHelper
	 [ Default ] Interface IDropTargetHelper
	Interface IDragSourceHelper
	Interface IDragSourceHelper2
End CoClass
'CLSID_KnownFolderManager 
[ CoClassId ("4df0c730-df9d-4ae3-9153-aa6b82e9795a") ]
CoClass KnownFolderManager
	 [ Default ] Interface IKnownFolderManager
End CoClass
' 'CLSID_FileOperation 
[ CoClassId ("3ad05575-8857-4850-9277-11b85bdb8e09") ]
CoClass FileOperation
	 [ Default ] Interface IFileOperation
End CoClass
'CLSID_ShellLibrary 
[ CoClassId ("D9B3211D-E57F-4426-AAEF-30A806ADD397") ]
CoClass ShellLibrary
	 [ Default ] Interface IShellLibrary
End CoClass

'CLSID_PortableDeviceManager 
[ CoClassId ("0AF10CEC-2ECD-4B92-9581-34F6AE0637F3") ]
CoClass PortableDeviceManager
	 [ Default ] Interface IPortableDeviceManager
End CoClass

Module ShellInterfaces
Option Explicit
Public Declare PtrSafe Function CoCreateInstance Lib "ole32" (rclsid As Any, ByVal pUnkOuter As LongPtr, ByVal dwClsContext As CLSCTX, riid As Any, pvarResult As Any) As Long

Public Const MAX_PATH                  As Long = 260

Public Type UUID
	Data1 As Long
	Data2 As Integer
	Data3 As Integer
	Data4(0 To 7) As Byte
End Type
Public Type CLSID
	Data1 As Long
	Data2 As Integer
	Data3 As Integer
	Data4(0 To 7) As Byte
End Type
Public Type PROPERTYKEY
	fmtid As UUID
	pid As Long
End Type
Public Type FILETIME
	dwLowDateTime As LONG
	dwHighDateTime As LONG
End Type
Public Type LARGE_INTEGER
   lowpart As Long
   highpart As Long
End Type
Public Type ULARGE_INTEGER
   lowpart As Long
   highpart As Long
End Type
Public Type RECT
    Left As Long
    Top As Long
    Right As Long
    Bottom As Long
End Type



Public Enum STGC
	STGC_DEFAULT = 0
	STGC_OVERWRITE = 1
	STGC_ONLYIFCURRENT = 2
	STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 4
	STGC_CONSOLIDATE = 8
End Enum
Public Enum LOCKTYPE
	LOCK_WRITE = 1
	LOCK_EXCLUSIVE = 2
	LOCK_ONLYONCE = 4
End Enum
Public Enum STGTY
	STGTY_STORAGE = 1
	STGTY_STREAM = 2
	STGTY_LOCKBYTES = 3
	STGTY_PROPERTY = 4
End Enum
Public Type STATSTG
    pwcsName As LongPtr
    type As STGTY
    cbSize As LongLong
    mtime As LongLong
    ctime As LongLong
    atime As LongLong
    grfMode As STGM
    grfLocksSupported As LOCKTYPE
    clsid As UUID
    grfStateBits As long
    reserved As long
End Type
Public Enum STATFLAG
	STATFLAG_DEFAULT = 0
	STATFLAG_NONAME = 1
	STATFLAG_NOOPEN = 2
End Enum
Public Enum MKSYS
	MKSYS_NONE = 0
	MKSYS_GENERICCOMPOSITE = 1
	MKSYS_FILEMONIKER = 2
	MKSYS_ANTIMONIKER = 3
	MKSYS_ITEMMONIKER = 4
	MKSYS_POINTERMONIKER = 5
	MKSYS_URLMONIKER = 6
	MKSYS_CLASSMONIKER = 7
	MKSYS_OBJREFMONIKER = 8
	MKSYS_SESSIONMONIKER = 9
End Enum
Public Enum MKREDUCE
	MKRREDUCE_ONE = &H30
	MKRREDUCE_TOUSER = &H20
	MKRREDUCE_THROUGHUSER = &H10
	MKRREDUCE_ALL = 0
End Enum

Public Type SYSTEMTIME
	wYear As Integer
	wMonth As Integer
	wDayOfWeek As Integer
	wDay As Integer
	wHour As Integer
	wMinute As Integer
	wSecond As Integer
	wMilliseconds As Integer
End Type
Public Const CF_TEXT             As Integer = 1'      //Text format
Public Const CF_BITMAP           As Integer = 2 '      //Handle to a bitmap
Public Const CF_METAFILEPICT     As Integer = 3 '      //Handle to a metafile picture format
Public Const CF_SYLK             As Integer = 4 '      //Microsoft Symbolic Link format
Public Const CF_DIF              As Integer = 5 '      //Software Art's data interchange format
Public Const CF_TIFF             As Integer = 6 '      //Tagged-image file format
Public Const CF_OEMTEXT          As Integer = 7 '      //Text format in OEM character set
Public Const CF_DIB              As Integer = 8 '      //Memory object containing BITMAPINFO
Public Const CF_PALETTE          As Integer = 9 '      //Handle to a color palette
Public Const CF_PENDATA          As Integer = 10 '     //Data for pen extensions
Public Const CF_RIFF             As Integer = 11 '     //Audio data
Public Const CF_WAVE             As Integer = 12 '     //Audio data in WAV format
Public Const CF_UNICODETEXT      As Integer = 13 '	  //Unicode text format
Public Const CF_ENHMETAFILE      As Integer = 14 '     //Handle to enhanced metafile
Public Const CF_HDROP            As Integer = 15 '     //Handle that identifies list of files
Public Const CF_LOCALE           As Integer = 16 '     //Handle to locale identifier
Public Const CF_DIBV5            As Integer = 17 '     //Uses BITMAPV5HEADER
Public Const CF_MAX              As Integer = 18'     //End of enum (Not real format, just placeholder)
Public Const CF_OWNERDISPLAY     As Integer = &H0080' //Owner display format
Public Const CF_DSPTEXT          As Integer = &H0081' //Text in private format
Public Const CF_DSPBITMAP        As Integer = &H0082' //Bitmap display in private format
Public Const CF_DSPMETAFILEPICT  As Integer = &H0083' //Metafile in private format
Public Const CF_DSPENHMETAFILE   As Integer = &H008E' //Enhanced metafile in private format

Public Const CFSTR_SHELLIDLIST				 = "Shell IDList Array"
Public Const CFSTR_SHELLIDLISTOFFSET		 = "Shell Object Offsets"
Public Const CFSTR_NETRESOURCES				 = "Net Resource"
Public Const CFSTR_FILEDESCRIPTORA			 = "FileGroupDescriptor"
Public Const CFSTR_FILEDESCRIPTORW			 = "FileGroupDescriptorW"
Public Const CFSTR_FILECONTENTS				 = "FileContents"
Public Const CFSTR_FILENAMEA				 = "FileName"
Public Const CFSTR_FILENAMEW				 = "FileNameW"
Public Const CFSTR_PRINTERGROUP				 = "PrinterFriendlyName"
Public Const CFSTR_FILENAMEMAPA				 = "FileNameMap"
Public Const CFSTR_FILENAMEMAPW				 = "FileNameMapW"
Public Const CFSTR_SHELLURL					 = "UniformResourceLocator"
Public Const CFSTR_INETURLA					 = "UniformResourceLocator"
Public Const CFSTR_INETURLW					 = "UniformResourceLocatorW"
Public Const CFSTR_PREFERREDDROPEFFECT		 = "Preferred DropEffect"
Public Const CFSTR_PERFORMEDDROPEFFECT		 = "Performed DropEffect"
Public Const CFSTR_PASTESUCCEEDED		     = "Paste Succeeded"
Public Const CFSTR_INDRAGLOOP                = "InShellDragLoop"
Public Const CFSTR_DRAGCONTEXT               = "DragContext"
Public Const CFSTR_COMPUTEDDRAGIMAGE         = "ComputedDragImage"
Public Const CFSTR_MOUNTEDVOLUME             = "MountedVolume"
Public Const CFSTR_PERSISTEDDATAOBJECT       = "PersistedDataObject"
Public Const CFSTR_DATAOBJECTATTRIBUTES      = "DataObjectAttributes"
Public Const CFSTR_DATAOBJECTATTRIBUTESELEVATED = "DataObjectAttributesRequiringElevation"
Public Const CFSTR_UIDISPLAYED               = "UIDisplayed"
Public Const CFSTR_DROPEFFECTFOLDERLIST      = "DropEffectFolderList"
Public Const CFSTR_ASYNC                     = "AsyncFlag"
Public Const CFSTR_USINGDEFAULTDRAGIMAGE     = "UsingDefaultDragImage"
Public Const CFSTR_DRAGIMAGEBITS             = "DragImageBits"
Public Const CFSTR_DRAGSOURCEHELPERFLAGS     = "DragSourceHelperFlags"
Public Const CFSTR_TARGETCLSID               = "TargetCLSID" 'HGLOBAL with a CLSID of the drop target
Public Const CFSTR_LOGICALPERFORMEDDROPEFFECT = "Logical Performed DropEffect"
Public Const CFSTR_OutlookExpressMessages    = "Outlook Express Messages"
Public Const CFSTR_HYPERLINK				 = "Hyperlink"
Public Const CFSTR_AUTOPLAY_SHELLIDLISTS	 = "Autoplay Enumerated IDList Array"
Public Const CFSTR_UNTRUSTEDDRAGDROP		 = "UntrustedDragDrop"
Public Const CFSTR_FILE_ATTRIBUTES_ARRAY	 = "File Attributes Array"
Public Const CFSTR_INVOKECOMMAND_DROPPARAM	 = "InvokeCommand DropParam"
Public Const CFSTR_SHELLDROPHANDLER			 = "DropHandlerCLSID"
Public Const CFSTR_DROPDESCRIPTION			 = "DropDescription"
Public Const CFSTR_HTMLFORMAT				 = "HTML Format"
Public Const CFSTR_PNG						 = "PNG"
Public Const CFSTR_RTF						 = "Rich Text Format"
Public Const CFSTR_OBJECTDESCRIPTOR          = "Object Descriptor"
Public Const CFSTR_MIME_TEXT				 = "text/plain"
Public Const CFSTR_MIME_RICHTEXT			 = "text/richtext"
Public Const CFSTR_MIME_URILIST				 = "text/uri-list"
Public Const CFSTR_MIME_X_BITMAP			 = "image/x-xbitmap"
Public Const CFSTR_MIME_POSTSCRIPT			 = "application/postscript"
Public Const CFSTR_MIME_AIFF				 = "audio/aiff"
Public Const CFSTR_MIME_BASICAUDIO			 = "audio/basic"
Public Const CFSTR_MIME_WAV					 = "audio/wav"
Public Const CFSTR_MIME_X_WAV				 = "audio/x-wav"
Public Const CFSTR_MIME_GIF					 = "image/gif"
Public Const CFSTR_MIME_PJPEG				 = "image/pjpeg"
Public Const CFSTR_MIME_JPEG				 = "image/jpeg"
Public Const CFSTR_MIME_TIFF				 = "image/tiff"
Public Const CFSTR_MIME_X_PNG				 = "image/x-png"
Public Const CFSTR_MIME_BMP					 = "image/bmp"
Public Const CFSTR_MIME_X_ART				 = "image/x-jg"
Public Const CFSTR_MIME_X_EMF				 = "image/x-emf"
Public Const CFSTR_MIME_X_WMF				 = "image/x-wmf"
Public Const CFSTR_MIME_AVI					 = "video/avi"
Public Const CFSTR_MIME_MPEG				 = "video/mpeg"
Public Const CFSTR_MIME_FRACTALS			 = "application/fractals"
Public Const CFSTR_MIME_RAWDATA				 = "application/octet-stream"
Public Const CFSTR_MIME_RAWDATASTRM			 = "application/octet-stream"
Public Const CFSTR_MIME_PDF					 = "application/pdf"
Public Const CFSTR_MIME_HTA					 = "application/hta"
Public Const CFSTR_MIME_X_AIFF				 = "audio/x-aiff"
Public Const CFSTR_MIME_X_REALAUDIO			 = "audio/x-pn-realaudio"
Public Const CFSTR_MIME_XBM					 = "image/xbm"
Public Const CFSTR_MIME_QUICKTIME			 = "video/quicktime"
Public Const CFSTR_MIME_X_MSVIDEO			 = "video/x-msvideo"
Public Const CFSTR_MIME_X_SGI_MOVIE			 = "video/x-sgi-movie"
Public Const CFSTR_MIME_HTML				 = "text/html"
Public Const CFSTR_MIME_XML					 = "text/xml"
Public Const CFSTR_SHELLCOPYDATA             = "Shell Copy Data"
    
Public Const DRAGDROP_E_ALREADYREGISTERED = &H80040101
Public Const DRAGDROP_E_INVALIDHWND       = &H80040102
Public Const DRAGDROP_E_NOTREGISTERED     = &H80040100
Public Const DRAGDROP_S_CANCEL            = &H40101
Public Const DRAGDROP_S_DROP              = &H40100
Public Const DRAGDROP_S_USEDEFAULTCURSORS = &H40102

Public Enum HRESULTS
	S_OK = 0
	S_FALSE = 1
	NOERROR = 0
	E_NOTIMPL = &H80004001
	E_OUTOFMEMORY = &H8007000E
	E_INVALIDARG = &H80070057
	E_NOINTERFACE = &H80004002
	E_POINTER = &H80004003
	E_HANDLE = &H80070006
	E_ABORT = &H80004004
	E_FAIL = &H80004005
	E_UNSPEC = &H80004005 'E_FAIL
	E_UNEXPECTED = &H8000FFFF
	E_ACCESSDENIED = &H80070005
	E_PENDING = &H8000000A
	E_BOUNDS = &H8000000B
	E_CHANGED_STATE = &H8000000C
	E_ILLEGAL_STATE_CHANGE = &H8000000D
	E_ILLEGAL_METHOD_CALL = &H8000000E
	'  IConnectionPoint errors
	CONNECT_E_FIRST = &H80040200
	CONNECT_E_NOCONNECTION = 2 ' there is no connection for this connection id
	CONNECT_E_ADVISELIMIT = 3 ' this implementation's limit for advisory connections has been reached
	CONNECT_E_CANNOTCONNECT = 4 ' connection attempt failed
	CONNECT_E_OVERRIDDEN = 5 ' must use a derived interface to connect
	'  DllRegisterServer/DllUnregisterServer errors
	SELFREG_E_TYPELIB = &H80040200 ' failed to register/unregister type library
	SELFREG_E_CLASS = 6 ' failed to register/unregister class
	'  IPerPropertyBrowsing status codes
	PERPROP_E_NOPAGEAVAILABLE = &H80040200 ' no page available for requested property
	'  INET errors
	INET_E_INVALID_URL = &H800C0002
	INET_E_NO_SESSION = &H800C0003
	INET_E_CANNOT_CONNECT = &H800C0004
	INET_E_RESOURCE_NOT_FOUND = &H800C0005
	INET_E_OBJECT_NOT_FOUND = &H800C0006
	INET_E_DATA_NOT_AVAILABLE = &H800C0007
	INET_E_DOWNLOAD_FAILURE = &H800C0008
	INET_E_AUTHENTICATION_REQUIRED = &H800C0009
	INET_E_NO_VALID_MEDIA = &H800C000A
	INET_E_CONNECTION_TIMEOUT = &H800C000B
	INET_E_INVALID_REQUEST = &H800C000C
	INET_E_UNKNOWN_PROTOCOL = &H800C000D
	INET_E_SECURITY_PROBLEM = &H800C000E
	INET_E_CANNOT_LOAD_DATA = &H800C000F
	INET_E_CANNOT_INSTANTIATE_OBJECT = &H800C0010
	INET_E_USE_DEFAULT_PROTOCOLHANDLER = &H800C0011
	INET_E_DEFAULT_ACTION = &H800C0011
	INET_E_USE_DEFAULT_SETTING = &H800C0012
	INET_E_QUERYOPTION_UNKNOWN = &H800C0013
	INET_E_REDIRECTING = &H800C0014
	INET_E_REDIRECT_FAILED = &H800C0014
	INET_E_REDIRECT_TO_DIR = &H800C0015
	INET_E_CANNOT_LOCK_REQUEST = &H800C0016
	INET_E_USE_EXTEND_BINDING = &H800C0017
	INET_E_ERROR_FIRST = &H800C0002
	INET_E_ERROR_LAST = &H800C0017
	INET_E_CODE_DOWNLOAD_DECLINED = &H800C0100
	INET_E_RESULT_DISPATCHED = &H800C0200
	INET_E_CANNOT_REPLACE_SFP_FILE = &H800C0300
End Enum

Public Enum CSIDLs
	CSIDL_DESKTOP = &H0000
	CSIDL_INTERNET = &H0001
	CSIDL_PROGRAMS = &H0002
	CSIDL_CONTROLS = &H0003
	CSIDL_PRINTERS = &H0004
	CSIDL_PERSONAL = &H0005
	CSIDL_FAVORITES = &H0006
	CSIDL_STARTUP = &H0007
	CSIDL_RECENT = &H0008
	CSIDL_SENDTO = &H0009
	CSIDL_BITBUCKET = &H000a
	CSIDL_STARTMENU = &H000b
	CSIDL_MYDOCUMENTS = &H000c
	CSIDL_MYMUSIC = &H000d
	CSIDL_MYVIDEO = &H000e
	CSIDL_DESKTOPDIRECTORY = &H0010
	CSIDL_DRIVES = &H0011
	CSIDL_NETWORK = &H0012
	CSIDL_NETHOOD = &H0013
	CSIDL_FONTS = &H0014
	CSIDL_TEMPLATES = &H0015
	CSIDL_COMMON_STARTMENU = &H0016
	CSIDL_COMMON_PROGRAMS = &H0017
	CSIDL_COMMON_STARTUP = &H0018
	CSIDL_COMMON_DESKTOPDIRECTORY = &H0019
	CSIDL_APPDATA = &H001a
	CSIDL_PRINTHOOD = &H001b
	CSIDL_LOCAL_APPDATA = &H001c
	CSIDL_ALTSTARTUP = &H001d
	CSIDL_COMMON_ALTSTARTUP = &H001e
	CSIDL_COMMON_FAVORITES = &H001f
	CSIDL_INTERNET_CACHE = &H0020
	CSIDL_COOKIES = &H0021
	CSIDL_HISTORY = &H0022
	CSIDL_COMMON_APPDATA = &H0023
	CSIDL_WINDOWS = &H0024
	CSIDL_SYSTEM = &H0025
	CSIDL_PROGRAM_FILES = &H0026
	CSIDL_MYPICTURES = &H0027
	CSIDL_PROFILE = &H0028
	CSIDL_SYSTEMX86 = &H0029
	CSIDL_PROGRAM_FILESX86 = &H002a
	CSIDL_PROGRAM_FILES_COMMON = &H002b
	CSIDL_PROGRAM_FILES_COMMONX86 = &H002c
	CSIDL_COMMON_TEMPLATES = &H002d
	CSIDL_COMMON_DOCUMENTS = &H002e
	CSIDL_COMMON_ADMINTOOLS = &H002f
	CSIDL_ADMINTOOLS = &H0030
	CSIDL_CONNECTIONS = &H0031
	CSIDL_COMMON_MUSIC = &H0035
	CSIDL_COMMON_PICTURES = &H0036
	CSIDL_COMMON_VIDEO = &H0037
	CSIDL_RESOURCES = &H0038
	CSIDL_RESOURCES_LOCALIZED = &H0039
	CSIDL_COMMON_OEM_LINKS = &H003a
	CSIDL_CDBURN_AREA = &H003b
	CSIDL_COMPUTERSNEARME = &H003d
	CSIDL_FLAG_PER_USER_INIT = &H0800
	CSIDL_FLAG_NO_ALIAS = &H1000
	CSIDL_FLAG_CREATE = &H8000
	CSIDL_FLAG_DONT_VERIFY = &H4000
	CSIDL_FLAG_MASK = &HFF00
End Enum

Public Type DVTARGETDEVICE
    tdSize As long
    tdDriverNameOffset As integer
    tdDeviceNameOffset As integer
    tdPortNameOffset As integer
    tdExtDevModeOffset As integer
    tdData(0) As Byte
End Type

Public Type FORMATETC
	cfFormat As Long
    pDVTARGETDEVICE As LongPtr
    dwAspect As DVASPECT
    lIndex As Long
    TYMED As TYMED
End Type
Public Type STGMEDIUM
	TYMED As TYMED
	data As LongPtr
	pUnkForRelease As LongPtr
End Type
Public Enum DVASPECT
    DVASPECT_CONTENT = 1
    DVASPECT_THUMBNAIL = 2
    DVASPECT_ICON = 4
    DVASPECT_DOCPRINT = 8
    DVASPECT_OPAQUE = 16
    DVASPECT_TRANSPARENT = 32
End Enum

Public Enum TYMED
    TYMED_HGLOBAL = 1
    TYMED_FILE = 2
    TYMED_ISTREAM = 4
    TYMED_ISTORAGE = 8
    TYMED_GDI = 16
    TYMED_MFPICT = 32
    TYMED_ENHMF = 64
    TYMED_NULL = 0
End Enum
Public Enum ADVF
    ADVF_NODATA = 1
    ADVF_PRIMEFIRST = 2
    ADVF_ONLYONCE = 4
    ADVF_DATAONSTOP = 64
    ADVFCACHE_NOHANDLER = 8
    ADVFCACHE_FORCEBUILTIN = 16
    ADVFCACHE_ONSAVE = 32
End Enum

Public Type STATDATA
	FORMATETC As FORMATETC
	grfAdvf As ADVF
	pIAdviseSink As IAdviseSink
	dwConnection As Long
End Type

Public Enum DATADIR
	DATADIR_GET = 1
	DATADIR_SET = 2
End Enum

Public Type POINT
	x As Long
    y As Long
End Type

Public Type SIZE
    cx As long
    cy As long
End Type

Public Type SHDRAGIMAGE
	sizeDragImage As SIZE
	ptOffset As POINT
	hbmpDragImage As LongPtr
	crColorKey As Long
End Type

Public Enum DSH_FLAGS
	DSH_ALLOWDROPDESCRIPTIONTEXT = &H0001 ' Allow text specified in DropDescription to be displayed on drag image
End Enum

Public Enum DROPEFFECTS
	DROPEFFECT_NONE = 0
	DROPEFFECT_COPY = 1
	DROPEFFECT_MOVE = 2
	DROPEFFECT_LINK = 4
	DROPEFFECT_SCROLL = &H80000000
End Enum

Public Enum DROPIMAGETYPE
	DROPIMAGE_INVALID = -1
	DROPIMAGE_NONE = 0
	DROPIMAGE_COPY = 1
	DROPIMAGE_MOVE = 2
	DROPIMAGE_LINK = 4
	DROPIMAGE_LABEL = 6
	DROPIMAGE_WARNING = 7
	DROPIMAGE_NOIMAGE = 8
End Enum
Public Type DROPDESCRIPTION
	type As DROPIMAGETYPE
	szMessage(0 To 259) As Integer
	szInsert(0 To 259) As Integer
End Type

Public Enum FILE_ATTRIBUTES
	INVALID_FILE_ATTRIBUTES = -1
	FILE_ATTRIBUTE_READONLY = &H00000001
	FILE_ATTRIBUTE_HIDDEN = &H00000002
	FILE_ATTRIBUTE_SYSTEM = &H00000004
	FILE_ATTRIBUTE_DIRECTORY = &H00000010 'Read only
	FILE_ATTRIBUTE_ARCHIVE = &H00000020
	FILE_ATTRIBUTE_DEVICE = &H00000040
	FILE_ATTRIBUTE_NORMAL = &H00000080
	FILE_ATTRIBUTE_TEMPORARY = &H00000100
	FILE_ATTRIBUTE_SPARSE_FILE = &H00000200 'Read only
	FILE_ATTRIBUTE_REPARSE_POINT = &H00000400 'Read only
	FILE_ATTRIBUTE_COMPRESSED = &H00000800
	FILE_ATTRIBUTE_OFFLINE = &H00001000
	FILE_ATTRIBUTE_NOT_CONTENT_INDEXED = &H00002000
	FILE_ATTRIBUTE_ENCRYPTED = &H00004000
	FILE_ATTRIBUTE_INTEGRITY_STREAM = &H00008000
	FILE_ATTRIBUTE_PINNED = &H00008000
	FILE_ATTRIBUTE_VIRTUAL = &H00010000
	FILE_ATTRIBUTE_NO_SCRUB_DATA = &H00020000
	FILE_ATTRIBUTE_EA = &H00040000
	FILE_ATTRIBUTE_RECALL_ON_OPEN = &H00040000
	FILE_ATTRIBUTE_UNPINNED = &H00100000
	FILE_ATTRIBUTE_RECALL_ON_DATA_ACCESS = &H400000
End Enum
Public Type WIN32_FIND_DATAW
	dwFileAttributes As FILE_ATTRIBUTES
	ftCreationTime As FILETIME
	ftLastAccessTime As FILETIME
	ftLastWriteTime As FILETIME
	nFileSizeHigh As LONG
	nFileSizeLow As LONG
	dwReserved0 As LONG
	dwReserved1 As LONG
	cFileName(0 To 519) As Byte
	cAlternateFileName(0 To 27) As Byte
End Type

Public Enum SLGP_FLAGS
	SLGP_SHORTPATH = &H0001
	SLGP_UNCPRIORITY = &H0002
	SLGP_RAWPATH = &H0004
	SLGP_RELATIVEPRIORITY = &H0008
End Enum
Public Enum SLR_FLAGS
	SLR_NONE = &H0
	SLR_NO_UI = &H0001 ' don't post any UI durring the resolve operation, not msgs are pumped
	SLR_ANY_MATCH = &H0002 ' no longer used
	SLR_UPDATE = &H0004 ' save the link back to it's file if the track made it dirty
	SLR_NOUPDATE = &H0008
	SLR_NOSEARCH = &H0010 ' don't execute the search heuristics
	SLR_NOTRACK = &H0020 ' don't use NT5 object ID to track the link
	SLR_NOLINKINFO = &H0040 ' don't use the net and volume relative info
	SLR_INVOKE_MSI = &H0080 ' if we have a darwin link, then call msi to fault in the applicaion
	SLR_NO_UI_WITH_MSG_PUMP = &H0101 ' SLR_NO_UI + requires an enable modeless site or HWND
	SLR_OFFER_DELETE_WITHOUT_FILE = &H0200 ' offer the option to delete when unable to resolve, even if the shortcut is not stored in a file
	SLR_KNOWNFOLDER = &H0400 ' update known folder information if path changes due to folder redirection
	SLR_MACHINE_IN_LOCAL_TARGET = &H0800 ' resolve machine name in UNC targets pointing to local machine (used with SLDF_KEEP_LOCAL_IDLIST_FOR_UNC_TARGET)
	SLR_UPDATE_MACHINE_AND_SID = &H1000 ' update machine GUID and user SID if necessary
	SLR_NO_OBJECT_ID = &H2000 ' don't use the Volume Id and Object Id to locate the file.
End Enum

Public Enum CLSCTX
	CLSCTX_INPROC_SERVER = &H1
	CLSCTX_INPROC_HANDLER = &H2
	CLSCTX_LOCAL_SERVER = &H4
	CLSCTX_INPROC_SERVER16 = &H8
	CLSCTX_REMOTE_SERVER = &H10
	CLSCTX_INPROC_HANDLER16 = &H20
	CLSCTX_INPROC_SERVERX86 = &H40
	CLSCTX_INPROC_HANDLERX86 = &H80
	CLSCTX_ESERVER_HANDLER = &H100
	CLSCTX_RESERVED = &H200
	CLSCTX_NO_CODE_DOWNLOAD = &H400
	CLSCTX_NO_WX86_TRANSLATION = &H800
	CLSCTX_NO_CUSTOM_MARSHAL = &H1000
	CLSCTX_ENABLE_CODE_DOWNLOAD = &H2000
	CLSCTX_NO_FAILURE_LOG = &H4000
	CLSCTX_DISABLE_AAA = &H8000
	CLSCTX_ENABLE_AAA = &H10000
	CLSCTX_FROM_DEFAULT_CONTEXT = &H20000
	CLSCTX_ACTIVATE_32_BIT_SERVER = &H40000
	CLSCTX_ACTIVATE_64_BIT_SERVER = &H80000
	CLSCTX_ENABLE_CLOAKING = &H100000
	CLSCTX_APPCONTAINER = &H400000
	CLSCTX_ACTIVATE_AAA_AS_IU = &H800000
	CLSCTX_PS_DLL = &H80000000
End Enum
Public Enum STGM
	STGM_DIRECT = &H00000000
	STGM_TRANSACTED = &H00010000
	STGM_SIMPLE = &H08000000
	STGM_READ = &H00000000
	STGM_WRITE = &H00000001
	STGM_READWRITE = &H00000002
	STGM_SHARE_DENY_NONE = &H00000040
	STGM_SHARE_DENY_READ = &H00000030
	STGM_SHARE_DENY_WRITE = &H00000020
	STGM_SHARE_EXCLUSIVE = &H00000010
	STGM_PRIORITY = &H00040000
	STGM_DELETEONRELEASE = &H04000000
	STGM_NOSCRATCH = &H00100000
	STGM_CREATE = &H00001000
	STGM_CONVERT = &H00020000
	STGM_FAILIFTHERE = &H00000000
	STGM_NOSNAPSHOT = &H00200000
	STGM_DIRECT_SWMR = &H00400000
End Enum
Public Type COAUTHIDENTITY
	User As Integer
	UserLength As Long
	Domain As Integer
	DomainLength As Long
	Password As Integer
	PasswordLength As Long
	Flags As Long
End Type
Public Type COAUTHINFO
	dwAuthnSvc As Long
	dwAuthzSvc As Long
	pwszServerPrincName As LongPtr
	dwAuthnLevel As Long
	dwImpersonationLevel As Long
	pAuthIdentityData As LongPtr
	dwCapabilities As Long
End Type
Public Type COSERVERINFO
	dwReserved1 As Long
	pwszName As LongPtr
	pAuthInfo As LongPtr
	dwReserved2 As Long
End Type
Public Enum BIND_FLAGS
	BIND_MAYBOTHERUSER = 1
	BIND_JUSTTESTEXISTENCE = 2
End Enum
Public Type BIND_OPTS
	cbStruct As LONG '  sizeof(BIND_OPTS)
	grfFlags As BIND_FLAGS
	grfMode As STGM
	dwTickCountDeadline As LONG
End Type
Public Type BIND_OPTS2
	cbStruct As Long '  sizeof(BIND_OPTS2)
	grfFlags As BIND_FLAGS
	grfMode As STGM
	dwTickCountDeadline As Long
	dwTrackFlags As Long
	dwClassContext As Long
	locale As Long
	pServerInfo As LongPtr
End Type

Public Enum SHCONTF
	SHCONTF_CHECKING_FOR_CHILDREN = &H00010
	SHCONTF_FOLDERS = &H0020
	SHCONTF_NONFOLDERS = &H0040
	SHCONTF_INCLUDEHIDDEN = &H0080
	SHCONTF_INIT_ON_FIRST_NEXT = &H0100
	SHCONTF_NETPRINTERSRCH = &H0200
	SHCONTF_SHAREABLE = &H0400
	SHCONTF_STORAGE = &H0800
	SHCONTF_NAVIGATION_ENUM = &H01000
	SHCONTF_FASTITEMS = &H02000
	SHCONTF_FLATLIST = &H04000
	SHCONTF_ENABLE_ASYNC = &H08000
	SHCONTF_INCLUDESUPERHIDDEN = &H10000
End Enum
Public Enum SFGAO_Flags
	SFGAO_CANCOPY = &H00000001
	SFGAO_CANMOVE = &H00000002
	SFGAO_CANLINK = &H00000004
	SFGAO_STORAGE = &H00000008
	SFGAO_CANRENAME = &H00000010
	SFGAO_CANDELETE = &H00000020
	SFGAO_HASPROPSHEET = &H00000040
	SFGAO_DROPTARGET = &H00000100
	SFGAO_CAPABILITYMASK = &H00000177
	SFGAO_SYSTEM = &H00001000
	SFGAO_ENCRYPTED = &H00002000
	SFGAO_ISSLOW = &H00004000
	SFGAO_GHOSTED = &H00008000
	SFGAO_LINK = &H00010000
	SFGAO_SHARE = &H00020000
	SFGAO_READONLY = &H00040000
	SFGAO_HIDDEN = &H00080000
	SFGAO_DISPLAYATTRMASK = &H000FC000
	SFGAO_FILESYSANCESTOR = &H10000000
	SFGAO_FOLDER = &H20000000
	SFGAO_FILESYSTEM = &H40000000
	SFGAO_HASSUBFOLDER = &H80000000
	SFGAO_CONTENTSMASK = &H80000000
	SFGAO_VALIDATE = &H01000000
	SFGAO_REMOVABLE = &H02000000
	SFGAO_COMPRESSED = &H04000000
	SFGAO_BROWSABLE = &H08000000
	SFGAO_NONENUMERATED = &H00100000
	SFGAO_NEWCONTENT = &H00200000
	SFGAO_CANMONIKER = &H00400000
	SFGAO_HASSTORAGE = &H00400000
	SFGAO_STREAM = &H00400000
	SFGAO_STORAGEANCESTOR = &H00800000
	SFGAO_STORAGECAPMASK = &H70C50008
	SFGAO_PKEYSFGAOMASK = &H81044000
End Enum
Public Enum SHGNO_Flags
	SHGDN_NORMAL = 0
	SHGDN_INFOLDER = 1
	SHGDN_FORADDRESSBAR = &H4000
	SHGDN_FORPARSING = &H8000
End Enum
Public Enum ESTRRET
	STRRET_WSTR = 0
	STRRET_OFFSET = 1
	STRRET_CSTR = 2
End Enum
Public Type STRRET
	uType As ESTRRET
	cStr(0 To 259) As Byte
End Type
Public Enum SHCOLSTATEF
	SHCOLSTATE_TYPE_STR = &H00000001
	SHCOLSTATE_TYPE_INT = &H00000002
	SHCOLSTATE_TYPE_DATE = &H00000003
	SHCOLSTATE_TYPEMASK = &H0000000F
	SHCOLSTATE_ONBYDEFAULT = &H00000010
	SHCOLSTATE_SLOW = &H00000020
	SHCOLSTATE_EXTENDED = &H00000040
	SHCOLSTATE_SECONDARYUI = &H00000080
	SHCOLSTATE_HIDDEN = &H00000100
	SHCOLSTATE_PREFER_VARCMP = &H00000200
	SHCOLSTATE_PREFER_FMTCMP = &H00000400
	SHCOLSTATE_NOSORTBYFOLDERNESS = &H00000800
	SHCOLSTATE_VIEWONLY = &H00010000
	SHCOLSTATE_BATCHREAD = &H00020000
	SHCOLSTATE_NO_GROUPBY = &H00040000
	SHCOLSTATE_FIXED_WIDTH = &H00001000
	SHCOLSTATE_NODPISCALE = &H00002000
	SHCOLSTATE_FIXED_RATIO = &H00004000
	SHCOLSTATE_DISPLAYMASK = &H0000F000
End Enum
Public Type SHCOLUMNID
	fmtid As UUID
	pid As LONG
End Type
Public Type SHELLDETAILS
	fmt As Long ' LVCFMT_* value (header only)
	cxChar As Long ' Number of "average" characters (header only)
	str As STRRET ' String information
End Type
Public Type EXTRASEARCH
	guidSearch As UUID
	wszFriendlyName(0 To 159) As BYTE
	wszUrl(0 To 4095) As BYTE
End Type
Public Enum SIGDN
	SIGDN_NORMALDISPLAY = &H00000000
	SIGDN_PARENTRELATIVEPARSING = &H80018001
	SIGDN_DESKTOPABSOLUTEPARSING = &H80028000
	SIGDN_PARENTRELATIVEEDITING = &H80031001
	SIGDN_DESKTOPABSOLUTEEDITING = &H8004c000
	SIGDN_FILESYSPATH = &H80058000
	SIGDN_URL = &H80068000
	SIGDN_PARENTRELATIVEFORADDRESSBAR = &H8007c001
	SIGDN_PARENTRELATIVE = &H80080001
	SIGDN_PARENTRELATIVEFORUI = &H80094001
End Enum
Public Enum SICHINTF
	SICHINT_DISPLAY = &H00000000
	SICHINT_ALLFIELDS = &H80000000
	SICHINT_CANONICAL = &H10000000
	SICHINT_TEST_FILESYSPATH_IF_NOT_EQUAL = &H20000000
End Enum
Public Enum SIIGBF
	SIIGBF_RESIZETOFIT = &H00
	SIIGBF_BIGGERSIZEOK = &H01
	SIIGBF_MEMORYONLY = &H02
	SIIGBF_ICONONLY = &H04
	SIIGBF_THUMBNAILONLY = &H08
	SIIGBF_INCACHEONLY = &H10
	' Windows 8+
	SIIGBF_CROPTOSQUARE = &H20
	SIIGBF_WIDETHUMBNAILS = &H40
	SIIGBF_ICONBACKGROUND = &H80
	SIIGBF_SCALEUP = &H100
End Enum
Public Enum GETPROPERTYSTOREFLAGS
	GPS_DEFAULT = 0
	GPS_HANDLERPROPERTIESONLY = &H1
	GPS_READWRITE = &H2
	GPS_TEMPORARY = &H4
	GPS_FASTPROPERTIESONLY = &H8
	GPS_OPENSLOWITEM = &H10
	GPS_DELAYCREATION = &H20
	GPS_BESTEFFORT = &H40
	GPS_NO_OPLOCK = &H80
	GPS_PREFERQUERYPROPERTIES = &H100
	GPS_MASK_VALID = &H1ff
	GPS_EXTRINSICPROPERTIES = &H00000200
	GPS_EXTRINSICPROPERTIESONLY = &H00000400
End Enum
Public Enum ROTFLAGS
	ROTFLAGS_REGISTRATIONKEEPSALIVE = &H1
	ROTFLAGS_ALLOWANYCLIENT = &H2
End Enum
Public Enum PROPDESC_ENUMFILTER
	PDEF_ALL = 0 ' All properties in system
	PDEF_SYSTEM = 1 ' Only system properties
	PDEF_NONSYSTEM = 2 ' Only non-system properties
	PDEF_VIEWABLE = 3 ' Only viewable properties
	PDEF_QUERYABLE = 4 ' Deprecated
	PDEF_INFULLTEXTQUERY = 5 ' Deprecated
	PDEF_COLUMN = 6 ' Only properties that are columns
End Enum
Public Enum PROPDESC_COLUMNINDEX_TYPE
	PDCIT_NONE = 0
	PDCIT_ONDISK = 1
	PDCIT_INMEMORY = 2
	PDCIT_ONDEMAND = 3
	PDCIT_ONDISKALL = 4
	PDCIT_ONDISKVECTOR = 5
End Enum
Public Enum PROPDESC_SEARCHINFO_FLAGS
	PDSIF_DEFAULT = &H00000000
	PDSIF_ININVERTEDINDEX = &H00000001
	PDSIF_ISCOLUMN = &H00000002
	PDSIF_ISCOLUMNSPARSE = &H00000004
	PDSIF_ALWAYSINCLUDE = &H00000008
End Enum
Public Enum CONDITION_OPERATION
	COP_IMPLICIT = 0
	COP_EQUAL = 1
	COP_NOTEQUAL = 2
	COP_LESSTHAN = 3
	COP_GREATERTHAN = 4
	COP_LESSTHANOREQUAL = 5
	COP_GREATERTHANOREQUAL = 6
	COP_VALUE_STARTSWITH = 7
	COP_VALUE_ENDSWITH = 8
	COP_VALUE_CONTAINS = 9
	COP_VALUE_NOTCONTAINS = 10
	COP_DOSWILDCARDS = 11
	COP_WORD_EQUAL = 12
	COP_WORD_STARTSWITH = 13
	COP_APPLICATION_SPECIFIC = 14
End Enum
Public Enum PROPDESC_CONDITION_TYPE
	PDCOT_NONE = 0
	PDCOT_STRING = 1
	PDCOT_SIZE = 2
	PDCOT_DATETIME = 3
	PDCOT_BOOLEAN = 4
	PDCOT_NUMBER = 5
End Enum
Public Enum PROPDESC_AGGREGATION_TYPE
	PDAT_DEFAULT = 0 ' Display "multiple-values"
	PDAT_FIRST = 1 ' Display first property value in the selection.
	PDAT_SUM = 2 ' Display the numerical sum of the values. This is never returned for VT_LPWSTR, VT_BOOL, and VT_FILETIME types.
	PDAT_AVERAGE = 3 ' Display the numerical average of the values. This is never returned for VT_LPWSTR, VT_BOOL, and VT_FILETIME types.
	PDAT_DATERANGE = 4 ' Display the date range of the values. This is only returned for VT_FILETIME types.
	PDAT_UNION = 5 ' Display values as union of all values. The order is undefined.
	PDAT_MAX = 6 ' Displays the maximum of all the values.
	PDAT_MIN = 7 ' Displays the minimum of all the values.
End Enum
Public Enum PROPDESC_RELATIVEDESCRIPTION_TYPE
	PDRDT_GENERAL = 0
	PDRDT_DATE = 1
	PDRDT_SIZE = 2
	PDRDT_COUNT = 3
	PDRDT_REVISION = 4
	PDRDT_LENGTH = 5
	PDRDT_DURATION = 6
	PDRDT_SPEED = 7
	PDRDT_RATE = 8
	PDRDT_RATING = 9
	PDRDT_PRIORITY = 10
End Enum
Public Enum PROPDESC_SORTDESCRIPTION
	PDSD_GENERAL = 0
	PDSD_A_Z = 1
	PDSD_LOWEST_HIGHEST = 2
	PDSD_SMALLEST_BIGGEST = 3
	PDSD_OLDEST_NEWEST = 4
End Enum
Public Enum PROPDESC_FORMAT_FLAGS
	PDFF_DEFAULT = &H00000000
	PDFF_PREFIXNAME = &H00000001 ' Prefix the value with the property name
	PDFF_FILENAME = &H00000002 ' Treat as a file name
	PDFF_ALWAYSKB = &H00000004 ' Always format byte sizes as KB
	PDFF_RESERVED_RIGHTTOLEFT = &H00000008 ' Reserved for legacy use.
	PDFF_SHORTTIME = &H00000010 ' Show time as "5:17 pm"
	PDFF_LONGTIME = &H00000020 ' Show time as "5:17:14 pm"
	PDFF_HIDETIME = &H00000040 ' Hide the time-portion of the datetime
	PDFF_SHORTDATE = &H00000080 ' Show date as "3/21/04"
	PDFF_LONGDATE = &H00000100 ' Show date as "Monday, March 21, 2004"
	PDFF_HIDEDATE = &H00000200 ' Hide the date-portion of the datetime
	PDFF_RELATIVEDATE = &H00000400 ' Use friendly date descriptions like "Yesterday"
	PDFF_USEEDITINVITATION = &H00000800 ' Use edit invitation text if failed or empty
	PDFF_READONLY = &H00001000 ' Use readonly format, fill with default text if empty and !PDFF_FAILIFEMPTYPROP
	PDFF_NOAUTOREADINGORDER = &H00002000 ' Don't detect reading order automatically. Useful if you will be converting to Ansi and don't want Unicode reading order characters
End Enum
Public Enum PROPDESC_GROUPING_RANGE
	PDGR_DISCRETE = 0 ' Display individual values
	PDGR_ALPHANUMERIC = 1 ' Display static alphanumeric ranges for values
	PDGR_SIZE = 2 ' Display static size ranges for values
	PDGR_DYNAMIC = 3 ' Display dynamically created ranges for the values
	PDGR_DATE = 4 ' Display month/year groups
	PDGR_PERCENT = 5 ' Display percent buckets
	PDGR_ENUMERATED = 6 ' Display buckets from GetEnumTypeList
End Enum
Public Enum PROPDESC_DISPLAYTYPE
	PDDT_STRING = 0
	PDDT_NUMBER = 1
	PDDT_BOOLEAN = 2
	PDDT_DATETIME = 3
	PDDT_ENUMERATED = 4 ' Use GetEnumTypeList
End Enum
Public Enum PROPDESC_VIEW_FLAGS
	PDVF_DEFAULT = &H00000000
	PDVF_CENTERALIGN = &H00000001 ' This property should be centered
	PDVF_RIGHTALIGN = &H00000002 ' This property should be right aligned
	PDVF_BEGINNEWGROUP = &H00000004 ' Show this property as the beginning of the next collection of properties in the view
	PDVF_FILLAREA = &H00000008 ' Fill the remainder of the view area with the content of this property
	PDVF_SORTDESCENDING = &H00000010 ' If this flag is set, the default sort for this property is highest-to-lowest. If this flag is not set, the default sort is lowest-to-highest
	PDVF_SHOWONLYIFPRESENT = &H00000020 ' Only show this property if it is present
	PDVF_SHOWBYDEFAULT = &H00000040 ' the property should be shown by default in a view (where applicable)
	PDVF_SHOWINPRIMARYLIST = &H00000080 ' the property should be shown by default in primary column selection UI
	PDVF_SHOWINSECONDARYLIST = &H00000100 ' the property should be shown by default in secondary column selection UI
	PDVF_HIDELABEL = &H00000200 ' Hide the label if the view is normally inclined to show the label
	'  obsolete                 = 0x00000400,
	PDVF_HIDDEN = &H00000800 ' Don't display this property as a column in the UI
	PDVF_CANWRAP = &H00001000 ' the property can be wrapped to the next row
	PDVF_MASK_ALL = &H00001BFF
End Enum
Public Enum PROPDESC_TYPE_FLAGS
	PDTF_DEFAULT = &H00000000
	PDTF_MULTIPLEVALUES = &H00000001 ' This property can have multiple values (as VT_VECTOR)
	PDTF_ISINNATE = &H00000002 ' This property cannot be written to
	PDTF_ISGROUP = &H00000004 ' This property is a group heading
	PDTF_CANGROUPBY = &H00000008 ' The user can group by this property
	PDTF_CANSTACKBY = &H00000010 ' The user can stack by this property
	PDTF_ISTREEPROPERTY = &H00000020 ' This property contains a hierarchy
	PDTF_INCLUDEINFULLTEXTQUERY = &H00000040 ' Deprecated
	PDTF_ISVIEWABLE = &H00000080 ' This property is meant to be viewed by the user
	PDTF_ISQUERYABLE = &H00000100 ' Deprecated
	PDTF_CANBEPURGED = &H00000200 ' This property can be purged, even if it is innate (property handler should respect this)
	PDTF_SEARCHRAWVALUE = &H00000400 ' The raw (rather than formatted) value of this property should be used for searching
	PDTF_ISSYSTEMPROPERTY = &H80000000 ' This property is owned by the system
	PDTF_MASK_ALL = &H800007FF
End Enum
Public Enum PROPENUMTYPE
	PET_DISCRETEVALUE = 0 ' Use GetValue & GetDisplayText
	PET_RANGEDVALUE = 1 ' Use GetRangeValues & GetDisplayText
	PET_DEFAULTVALUE = 2 ' Use GetDisplayText
	PET_ENDRANGE = 3 ' Use GetValue
End Enum
Public Enum IconIndexes
	Unknown = 0
	Document = 1
	Application = 2
	ClosedFolder = 3
	OpenFolder = 4
End Enum
Public Enum GILFlags
	GIL_OPENICON = &H0001
	GIL_FORSHELL = &H0002
	GIL_ASYNC = &H0020
	GIL_DEFAULTICON = &H0040
	GIL_FORSHORTCUT = &H0080
	GIL_CHECKSHIELD = &H0200
End Enum
Public Enum GILRes
	GIL_SIMULATEDOC = &H0001
	GIL_PERINSTANCE = &H0002
	GIL_PERCLASS = &H0004
	GIL_NOTFILENAME = &H0008
	GIL_DONTCACHE = &H0010
	GIL_SHIELD = &H0200
	GIL_FORCENOSHIELD = &H0400
End Enum
Public Enum SIATTRIBFLAGS
	SIATTRIBFLAGS_AND = &H00000001 ' if multiple items and the attirbutes together.
	SIATTRIBFLAGS_OR = &H00000002 ' if multiple items or the attributes together.
	SIATTRIBFLAGS_APPCOMPAT = &H00000003 ' Call GetAttributes directly on the ShellFolder for multiple attributes
	SIATTRIBFLAGS_MASK = &H00000003 ' for the AND/OR/APPCOMPAT value
	SIATTRIBFLAGS_ALLITEMS = &H00004000 ' normally only the first few items are used to compute the attributes, pass this to force all of them
	'  doing all will result in poor performance for large arrays so use this carefuly
End Enum
Public Enum QITipFlags
	QITIPF_DEFAULT = &H00000000
	QITIPF_USENAME = &H00000001
	QITIPF_LINKNOTARGET = &H00000002
	QITIPF_LINKUSETARGET = &H00000004
	QITIPF_USESLOWTIP = &H00000008
	QITIPF_SINGLELINE = &H00000010
End Enum
Public Enum QIFlags
	QIF_CACHED = &H00000001
	QIF_DONTEXPANDFOLDER = &H00000002
End Enum
Public Enum IMAGELISTDRAWFLAGS
	ILD_NORMAL = &H00000000
	ILD_TRANSPARENT = &H00000001
	ILD_BLEND25 = &H00000002
	ILD_FOCUS = &H00000002 'ILD_BLEND25,
	ILD_BLEND50 = &H00000004
	ILD_SELECTED = &H00000004 'ILD_BLEND50,
	ILD_BLEND = &H00000004 'ILD_BLEND50,
	ILD_MASK = &H00000010
	ILD_IMAGE = &H00000020
	ILD_ROP = &H00000040 '(WIN32_IE >= &H300)
	ILD_OVERLAYMASK = &H00000F00
	ILD_PRESERVEALPHA = &H00001000
	ILD_SCALE = &H00002000
	ILD_DPISCALE = &H00004000
	ILD_ASYNC = &H00008000
End Enum
Public Enum IMAGELISTSTATEFLAGS
	ILS_NORMAL = &H00000000
	ILS_GLOW = &H00000001 'Not supported
	ILS_SHADOW = &H00000002 'Not supported
	ILS_SATURATE = &H00000004
	ILS_ALPHA = &H00000008
End Enum
Public Enum RASTEROPFLAGS
	SRCAND = &H8800C6
	SRCCOPY = &HCC0020
	SRCINVERT = &H660046
	SRCPAINT = &HEE0086
	BLACKNESS = &H42
	CAPTUREBLT = &H40000000
	DSTINVERT = &H550009
	MERGECOPY = &HC000CA
	MERGEPAINT = &HBB0226
	NOMIRRORBITMAP = &H80000000
	NOTSRCCOPY = &H330008
	NOTSRCERASE = &H1100A6
	PATCOPY = &HF00021
	PATINVERT = &H5A0049
	PATPAINT = &HFB0A09
	SRCERASE = &H440328
	WHITENESS = &HFF0062
End Enum
Public Type IMAGELISTDRAWPARAMS
	cbSize As Long
	himl As LongPtr
	i As Long
	hdcDst As LongPtr
	x As Long
	y As Long
	cx As Long
	cy As Long
	xBitmap As Long ' x offest from the upperleft of bitmap
	yBitmap As Long ' y offset from the upperleft of bitmap
	rgbBk As Long
	rgbFg As Long
	fStyle As IMAGELISTDRAWFLAGS
	dwRop As RASTEROPFLAGS
	fState As IMAGELISTSTATEFLAGS
	Frame As Long
	crEffect As Long
End Type
Public Type IMAGEINFO
	hbmImage As LongPtr
	hbmMask As LongPtr
	Unused1 As Long
	Unused2 As Long
	rcImage As RECT
End Type
Public Enum ILIMAGEQUALITY
	ILIF_ALPHA = &H00000001
	ILIF_LOWQUALITY = &H00000002
End Enum
Public Enum ILDRAWRESULTS
	ILDRF_IMAGELOWQUALITY = &H00000001
	ILDRF_OVERLAYLOWQUALITY = &H00000010
End Enum
Public Enum QueryContextMenuFlags
	CMF_NORMAL = &H00000000
	CMF_DEFAULTONLY = &H00000001
	CMF_VERBSONLY = &H00000002
	CMF_EXPLORE = &H00000004
	CMF_NOVERBS = &H00000008
	CMF_CANRENAME = &H00000010
	CMF_NODEFAULT = &H00000020
	CMF_INCLUDESTATIC = &H00000040
	' Vista+
	CMF_ITEMMENU = &H00000080
	CMF_EXTENDEDVERBS = &H00000100
	CMF_DISABLEDVERBS = &H00000200
	' Win7+
	CMF_ASYNCVERBSTATE = &H00000400
	CMF_OPTIMIZEFORINVOKE = &H00000800
	CMF_SYNCCASCADEMENU = &H00001000
	CMF_DONOTPICKDEFAULT = &H00002000
	' Now how'd these get here?
	CMF_DVFILE = &H00010000 ' "File" pulldown
	CMF_ICM3 = &H00020000 ' QueryContextMenu can assume IContextMenu3 semantics (i.e.,
	'  will receive WM_INITMENUPOPUP, WM_MEASUREITEM, WM_DRAWITEM,
	'  and WM_MENUCHAR, via HandleMenuMsg2)
	CMF_RESERVED = &Hffff0000
End Enum
Public Enum GetCommandStringFlags
	GCS_VERB = &H00000000
	GCS_HELPTEXT = &H00000001
	GCS_VALIDATE = &H00000002
	GCS_VERBW = &H00000004
	GCS_HELPTEXTW = &H00000005
	GCS_VALIDATEW = &H00000006
	GCS_VERBICONW = &H00000014
	GCS_UNICODE = &H00000004
End Enum
Public Enum InvokeCommandMask
	CMIC_MASK_HOTKEY = &H00000020
	CMIC_MASK_ICON = &H00000010
	CMIC_MASK_FLAG_NO_UI = &H00000400
	CMIC_MASK_UNICODE = &H00004000
	CMIC_MASK_NO_CONSOLE = &H00008000
	CMIC_MASK_HASLINKNAME = &H00010000 'SEE_MASK_HASLINKNAME,
	CMIC_MASK_FLAG_SEP_VDM = &H00040000 'SEE_MASK_FLAG_SEPVDM,
	CMIC_MASK_HASTITLE = &H00020000 'SEE_MASK_HASTITLE,
	CMIC_MASK_ASYNCOK = &H00100000
	CMIC_MASK_SHIFT_DOWN = &H10000000
	CMIC_MASK_CONTROL_DOWN = &H40000000
	CMIC_MASK_FLAG_LOG_USAGE = &H04000000
	CMIC_MASK_NOZONECHECKS = &H00800000 ' SEE_MASK_NOZONECHECKS
	CMIC_MASK_PTINVOKE = &H20000000
	CMIC_MASK_DATAOBJECT = &H40000000 ' lpPara is IDataObject*
End Enum
Public Type CMINVOKECOMMANDINFO
	cbSize As LONG
	fMask As InvokeCommandMask
	hwnd As LongPtr
	lpVerb As LongPtr
	lpParameters As LongPtr
	lpDirectory As LongPtr
	nShow As SHOWWINDOW
	dwHotKey As LONG
	hIcon As LongPtr
End Type
Public Type CMINVOKECOMMANDINFOEX
	cbSize As LONG
	fMask As InvokeCommandMask
	hwnd As LongPtr
	lpVerb As LongPtr
	lpParameters As LongPtr
	lpDirectory As LongPtr
	nShow As SHOWWINDOW
	dwHotKey As LONG
	hIcon As LongPtr
	lpTitle As LongPtr
	lpVerbW As LongPtr
	lpParametersW As LongPtr
	lpDirectoryW As LongPtr
	lpTitleW As LongPtr
	ptInvoke As POINT
End Type
Public Enum SHOWWINDOW
	SW_HIDE = 0
	SW_SHOWNORMAL = 1
	SW_NORMAL = 1
	SW_SHOWMINIMIZED = 2
	SW_SHOWMAXIMIZED = 3
	SW_MAXIMIZE = 3
	SW_SHOWNOACTIVATE = 4
	SW_SHOW = 5
	SW_MINIMIZE = 6
	SW_SHOWMINNOACTIVE = 7
	SW_SHOWNA = 8
	SW_RESTORE = 9
	SW_SHOWDEFAULT = 10
End Enum
Public Enum KF_REDIRECTION_CAPABILITIES
	KF_REDIRECTION_CAPABILITIES_ALLOW_ALL = &H000000FF ' if any of these flags set this means that
	'  the folder can potentially be redirected unless
	'  any deny flag is set
	KF_REDIRECTION_CAPABILITIES_REDIRECTABLE = &H00000001 ' the folder can potentially be redirected
	'  currently we only allow redirection for
	'  common and user's folders.
	'  Fixed and virtual can not be redirected
	KF_REDIRECTION_CAPABILITIES_DENY_ALL = &H000FFF00 ' If any of there flags set then redirection is blocked
	KF_REDIRECTION_CAPABILITIES_DENY_POLICY_REDIRECTED = &H00000100 ' Folder can not be redirected because it is redirected by group policy
	KF_REDIRECTION_CAPABILITIES_DENY_POLICY = &H00000200 ' Folder can not be redirected because the policy prohibits redirecting this folder
	KF_REDIRECTION_CAPABILITIES_DENY_PERMISSIONS = &H00000400 ' Folder can not be redirected because the caller does not have sufficient permissions
End Enum
Public Enum KF_REDIRECT_FLAGS
	KF_REDIRECT_USER_EXCLUSIVE = &H00000001 ' Give user exclusive permission
	KF_REDIRECT_COPY_SOURCE_DACL = &H00000002 ' Copy the DACL of the source directory to target
	'  Ownership checks for the target folder if the folder exists, by default, the API does not do any ownership checks
	KF_REDIRECT_OWNER_USER = &H00000004 ' The owner of the folder must be the user itself
	KF_REDIRECT_SET_OWNER_EXPLICIT = &H00000008 ' The owner of any newly created folder will be set explicitly
	'  by default if user belongs to Administrators group Administrators will be the owner
	'  Check if the redirection is already done, S_OK if yes, S_FALSE if some actions need to be done.
	KF_REDIRECT_CHECK_ONLY = &H00000010
	'  Enable user interaction when redirecting
	KF_REDIRECT_WITH_UI = &H00000020
	'  CSC related settings
	KF_REDIRECT_UNPIN = &H00000040 ' Unpin the source folder
	KF_REDIRECT_PIN = &H00000080 ' Pin the target folder
	KF_REDIRECT_COPY_CONTENTS = &H00000200 ' Copy the contents (both files and subfolders) under the known folder
	KF_REDIRECT_DEL_SOURCE_CONTENTS = &H00000400 ' Delete source, valid only if KF_REDIRECT_COPY_CONTENTS set
	KF_REDIRECT_EXCLUDE_ALL_KNOWN_SUBFOLDERS = &H00000800 ' Exclude all known subfolders from redirection
End Enum
Public Enum KF_DEFINITION_FLAGS
	KFDF_LOCAL_REDIRECT_ONLY = &H00000002 ' Can only be redirected to a local disk
	KFDF_ROAMABLE = &H00000004 ' Can be roamed via PC to PC sync
	KFDF_PRECREATE = &H00000008 ' Pre create folder
	KFDF_STREAM = &H00000010 ' folder is actually a file
	KFDF_PUBLISHEXPANDEDPATH = &H00000020 ' Expanded path is published in the registry under HKCU
	KFDF_NO_REDIRECT_UI = &H00000040
End Enum
Public Enum KF_CATEGORY
	KF_CATEGORY_VIRTUAL = 1 ' virtual folders, have not file system path
	KF_CATEGORY_FIXED = 2 ' fixed, predefined OS folders, might be different for different users
	KF_CATEGORY_COMMON = 3 ' Public folders shared by all users, can be redirected
	KF_CATEGORY_PERUSER = 4 ' User folders, can be redirected
End Enum
Public Type KNOWNFOLDER_DEFINITION
	category As KF_CATEGORY
	pszName As LongPtr
	pszDescription As LongPtr
	fidParent As UUID
	pszRelativePath As LongPtr
	pszParsingName As LongPtr
	pszTooltip As LongPtr
	pszLocalizedName As LongPtr
	pszIcon As LongPtr
	pszSecurity As LongPtr
	dwAttributes As Long
	kfdFlags As KF_DEFINITION_FLAGS
	ftidType As UUID
End Type
Public Enum KNOWN_FOLDER_FLAG
	KF_FLAG_DEFAULT = &H00000000
	KF_FLAG_SIMPLE_IDLIST = &H00000100
	KF_FLAG_NOT_PARENT_RELATIVE = &H00000200
	KF_FLAG_DEFAULT_PATH = &H00000400
	KF_FLAG_INIT = &H00000800
	KF_FLAG_NO_ALIAS = &H00001000
	KF_FLAG_DONT_UNEXPAND = &H00002000
	KF_FLAG_DONT_VERIFY = &H00004000
	KF_FLAG_CREATE = &H00008000
	KF_FLAG_NO_APPCONTAINER_REDIRECTION = &H00010000
	KF_FLAG_NO_PACKAGE_REDIRECTION = &H00010000
	KF_FLAG_FORCE_PACKAGE_REDIRECTION = &H00020000
	KF_FLAG_FORCE_APPCONTAINER_REDIRECTION = &H00020000
	KF_FLAG_RETURN_FILTER_REDIRECTION_TARGET = &H00040000
	KF_FLAG_FORCE_APP_DATA_REDIRECTION = &H00080000
	KF_FLAG_ALIAS_ONLY = &H80000000
End Enum
Public Enum FFFP_MODE
	FFFP_EXACTMATCH = 0
	FFFP_NEARESTPARENTMATCH = 1
End Enum
Public Enum FILEOP_FLAGSEX
	FOFX_ADDUNDORECORD = &H20000000 'WINDOWS 8+
	FOFX_NOSKIPJUNCTIONS = &H00010000
	FOFX_PREFERHARDLINK = &H00020000
	FOFX_SHOWELEVATIONPROMPT = &H00040000
	FOFX_EARLYFAILURE = &H00100000
	FOFX_PRESERVEFILEEXTENSIONS = &H00200000
	FOFX_KEEPNEWERFILE = &H00400000
	FOFX_NOCOPYHOOKS = &H00800000
	FOFX_NOMINIMIZEBOX = &H01000000
	FOFX_MOVEACLSACROSSVOLUMES = &H02000000
	FOFX_DONTDISPLAYSOURCEPATH = &H04000000
	FOFX_DONTDISPLAYDESTPATH = &H08000000
	FOFX_RECYCLEONDELETE = &H00080000 'WINDOWS 8+
	FOFX_REQUIREELEVATION = &H10000000 'VISTA SP1+
	FOFX_COPYASDOWNLOAD = &H40000000 'WINDOWS 7+
	FOFX_DONTDISPLAYLOCATIONS = &H80000000
End Enum
Public Enum IFO_Flags
	IFO_ALLOWUNDO = &H00000040
	IFO_FILESONLY = &H00000080
	IFO_NOCONFIRMATION = &H00000010
	IFO_NOCONFIRMMKDIR = &H00000200
	IFO_NO_CONNECTED_ELEMENTS = &H00002000
	IFO_NOCOPYSECURITYATTRIBS = &H00000800
	IFO_NOERRORUI = &H00000400
	IFO_NORECURSION = &H00001000
	IFO_RENAMEONCOLLISION = &H00000008
	IFO_SILENT = &H00000004
	IFO_WANTNUKEWARNING = &H00004000
	IFOX_ADDUNDORECORD = &H20000000 'WINDOWS 8+
	IFOX_NOSKIPJUNCTIONS = &H00010000
	IFOX_PREFERHARDLINK = &H00020000
	IFOX_SHOWELEVATIONPROMPT = &H00040000
	IFOX_EARLYFAILURE = &H00100000
	IFOX_PRESERVEFILEEXTENSIONS = &H00200000
	IFOX_KEEPNEWERFILE = &H00400000
	IFOX_NOCOPYHOOKS = &H00800000
	IFOX_NOMINIMIZEBOX = &H01000000
	IFOX_MOVEACLSACROSSVOLUMES = &H02000000
	IFOX_DONTDISPLAYSOURCEPATH = &H04000000
	IFOX_DONTDISPLAYDESTPATH = &H08000000
	IFOX_RECYCLEONDELETE = &H00080000 'WINDOWS 8+
	IFOX_REQUIREELEVATION = &H10000000 'VISTA SP1+
	IFOX_COPYASDOWNLOAD = &H40000000 'WINDOWS 7+
	IFOX_DONTDISPLAYLOCATIONS = &H80000000
End Enum
Public Enum TRANSFER_SOURCE_FLAGS
	TSF_NORMAL = 0
	TSF_FAIL_EXIST = 0
	TSF_RENAME_EXIST = &H1
	TSF_OVERWRITE_EXIST = &H2
	TSF_ALLOW_DECRYPTION = &H4
	TSF_NO_SECURITY = &H8
	TSF_COPY_CREATION_TIME = &H10
	TSF_COPY_WRITE_TIME = &H20
	TSF_USE_FULL_ACCESS = &H40
	TSF_DELETE_RECYCLE_IF_POSSIBLE = &H80
	TSF_COPY_HARD_LINK = &H100
	TSF_COPY_LOCALIZED_NAME = &H200
	TSF_MOVE_AS_COPY_DELETE = &H400
	TSF_SUSPEND_SHELLEVENTS = &H800
End Enum
Public Enum OPPROGDLGF
	'  The flag space includes OPPROGDLG_ and PROGDLG_ values
	'  please guarantee they don't conflict. See shlobj.w for PROGDLG_*
	OPPROGDLG_DEFAULT = &H00000000
	OPPROGDLG_NORMAL = &H00000000 ' default normal progress dlg behavior
	OPPROGDLG_MODAL = &H00000001 ' the dialog is modal to its hwndParent (default is modeless)
	OPPROGDLG_AUTOTIME = &H00000002 ' automatically updates the "Line3" text with the "time remaining" (you cant call SetLine3 if you passs this!)
	OPPROGDLG_NOTIME = &H00000004 ' we dont show the "time remaining" if this is set. We need this if dwTotal < dwCompleted for sparse files
	OPPROGDLG_NOMINIMIZE = &H00000008 ' Do not have a minimize button in the caption bar.
	OPPROGDLG_NOPROGRESSBAR = &H00000010 ' Don't display the progress bar
	OPPROGDLG_MARQUEEPROGRESS = &H00000020 ' Use marquee progress (comctl32 v6 required)
	OPPROGDLG_NOCANCEL = &H00000040 ' No cancel button (operation cannot be canceled) (use sparingly)
	OPPROGDLG_ENABLEPAUSE = &H00000080 ' Add a pause button (operation can be paused)
	OPPROGDLG_ALLOWUNDO = &H00000100 ' The operation can be undone in the dialog.  (The Stop button becomes Undo)
	OPPROGDLG_DONTDISPLAYSOURCEPATH = &H00000200 ' Don't display the path of source file in progress dialog
	OPPROGDLG_DONTDISPLAYDESTPATH = &H00000400 ' Don't display the path of destination file in progress dialog
	OPPROGDLG_NOMULTIDAYESTIMATES = &H00000800 ' deprecated - progress dialog no longer displays > 1 day estimates
	OPPROGDLG_DONTDISPLAYLOCATIONS = &H00001000 ' Don't display the location line in the progress dialog
End Enum
Public Enum PDOPSTATUS
	PDOPS_RUNNING = 1 ' Operation is running, no user intervention
	PDOPS_PAUSED = 2 ' Operation has been paused by the user
	PDOPS_CANCELLED = 3 ' Operation has been cancelled by the user - now go undo
	PDOPS_STOPPED = 4 ' Operation has been stopped by the user - terminate completely
	PDOPS_ERRORS = 5 ' Operation has gone as far as it can without throwing error dialogs
End Enum
Public Enum PDMODE
	PDM_DEFAULT = &H00000000
	PDM_RUN = &H00000001 ' Operation is running
	PDM_PREFLIGHT = &H00000002 ' Pre-flight mode, calculating operation time, etc
	PDM_UNDOING = &H00000004 ' Operation is rolling back, undo has been selected
	PDM_ERRORSBLOCKING = &H00000008 ' Only errors remain, error dialogs are blocking progress from completing
	PDM_INDETERMINATE = &H00000010 ' The length of the operation is indeterminate, don't show a timer, progressbar is in marquee mode
End Enum
Public Enum SPACTION
	SPACTION_NONE = 0
	SPACTION_MOVING = 1
	SPACTION_COPYING = 2
	SPACTION_RECYCLING = 3
	SPACTION_APPLYINGATTRIBS = 4
	SPACTION_DOWNLOADING = 5
	SPACTION_SEARCHING_INTERNET = 6
	SPACTION_CALCULATING = 7
	SPACTION_UPLOADING = 8
	SPACTION_SEARCHING_FILES = 9
	SPACTION_DELETING = 10 ' Vista or higher
	SPACTION_RENAMING = 11 ' Vista or higher
	SPACTION_FORMATTING = 12 ' Vista or higher
	SPACTION_COPY_MOVING = 13 ' Move as copy-delete, Windows 7 or higher
End Enum
Public Enum LIBRARYSAVEFLAGS
	LSF_FAILIFTHERE = &H00000000 ' if a library with the same name exists fail to save
	LSF_OVERRIDEEXISTING = &H00000001 ' will override existing library with the same name if there or create a new one if not
	LSF_MAKEUNIQUENAME = &H00000002 ' if a library with the same name exists create a unique name by adding a number in parenthesis
End Enum
Public Enum DEFAULTSAVEFOLDERTYPE
	DSFT_DETECT = 1 ' Specifies the save folder for the current user depending on whether or not they are the owner of the library
	DSFT_PRIVATE = 2 ' Specifies the private save folder for the owner of the library
	DSFT_PUBLIC = 3 ' Specifies the public save folder for non-owners of the library
End Enum
Public Enum LIBRARYOPTIONFLAGS
	LOF_DEFAULT = &H00000000
	LOF_PINNEDTONAVPANE = &H00000001 ' Specifies that this library is pinned to the navigation pane.
	LOF_MASK_ALL = &H00000001
End Enum
Public Enum LIBRARYFOLDERFILTER
	LFF_FORCEFILESYSTEM = 1 ' Return only file system items.
	LFF_STORAGEITEMS = 2 ' Return any items that can be bound to an IStorage. (default)
	LFF_ALLITEMS = 3 ' Return all items.
End Enum

Public Enum SSFLAGS1
	fShowAllObjects = &H1
	fShowExtensions = &H2
	fNoConfirmRecycle = &H4
	fShowSysFiles = &H8
	fShowCompColor = &H10
	fDoubleClickInWebView = &H20
	fDesktopHTML = &H40
	fWin95Classic = &H80
	fDontPrettyPath = &H100
	fShowAttribCol = &H200
	fMapNetDrvBtn = &H400
	fShowInfoTip = &H800
	fHideIcons = &H1000
	fWebView = &H2000
	fFilter = &H4000
	fShowSuperHidden = &H8000
	fNoNetCrawling = &H10000
End Enum
Public Enum SSFLAGS2
	fSepProcess = &H1
	fStartPanelOn = &H2
	fShowStartPage = &H4
	fAutoCheckSelect = &H8
	fIconsOnly = &H10
	fShowTypeOverlay = &H20
	fShowStatusBar = &H40
End Enum
Public Type SHELLSTATE
	fFlags1 As SSFLAGS1
	dwWin95Unused As Long
	uWin95Unused As Long
	lParamSort As LONG
	iSortDirection As LONG
	Version As LONG
	NotUsed As Long
	fFlags2 As SSFLAGS2
	fSpareFlags As LONG
End Type
Public Enum SFS_MASK
	SSF_SHOWALLOBJECTS = &H00000001
	SSF_SHOWEXTENSIONS = &H00000002
	SSF_HIDDENFILEEXTS = &H00000004
	SSF_SERVERADMINUI = &H00000004
	SSF_SHOWCOMPCOLOR = &H00000008
	SSF_SORTCOLUMNS = &H00000010
	SSF_SHOWSYSFILES = &H00000020
	SSF_DOUBLECLICKINWEBVIEW = &H00000080
	SSF_SHOWATTRIBCOL = &H00000100
	SSF_DESKTOPHTML = &H00000200
	SSF_WIN95CLASSIC = &H00000400
	SSF_DONTPRETTYPATH = &H00000800
	SSF_SHOWINFOTIP = &H00002000
	SSF_MAPNETDRVBUTTON = &H00001000
	SSF_NOCONFIRMRECYCLE = &H00008000
	SSF_HIDEICONS = &H00004000
	SSF_FILTER = &H00010000
	SSF_WEBVIEW = &H00020000
	SSF_SHOWSUPERHIDDEN = &H00040000
	SSF_SEPPROCESS = &H00080000
	' #if (NTDDI_WINXP)
	SSF_NONETCRAWLING = &H00100000
	SSF_STARTPANELON = &H00200000
	SSF_SHOWSTARTPAGE = &H00400000
	' #endif  // NTDDI_WINXP
	' #if (NTDDI_VISTA)
	SSF_AUTOCHECKSELECT = &H00800000
	SSF_ICONSONLY = &H01000000
	SSF_SHOWTYPEOVERLAY = &H02000000
	' #endif  // NTDDI_VISTA
	' #if (NTDDI_WIN8)
	SSF_SHOWSTATUSBAR = &H04000000
End Enum
Public Type SHChangeNotifyEntry
	pidl As LongPtr
	fRecursive As Long
End Type
Public Enum SHCNRF
	SHCNRF_InterruptLevel = &H0001
	SHCNRF_ShellLevel = &H0002
	SHCNRF_RecursiveInterrupt = &H1000
	SHCNRF_NewDelivery = &H8000
End Enum
Public Enum SHCN_Events
	SHCNE_RENAMEITEM = &H00000001
	SHCNE_CREATE = &H00000002
	SHCNE_DELETE = &H00000004
	SHCNE_MKDIR = &H00000008
	SHCNE_RMDIR = &H00000010
	SHCNE_MEDIAINSERTED = &H00000020
	SHCNE_MEDIAREMOVED = &H00000040
	SHCNE_DRIVEREMOVED = &H00000080
	SHCNE_DRIVEADD = &H00000100
	SHCNE_NETSHARE = &H00000200
	SHCNE_NETUNSHARE = &H00000400
	SHCNE_ATTRIBUTES = &H00000800
	SHCNE_UPDATEDIR = &H00001000
	SHCNE_UPDATEITEM = &H00002000
	SHCNE_SERVERDISCONNECT = &H00004000
	SHCNE_UPDATEIMAGE = &H00008000
	SHCNE_DRIVEADDGUI = &H00010000
	SHCNE_RENAMEFOLDER = &H00020000
	SHCNE_FREESPACE = &H00040000
	SHCNE_EXTENDED_EVENT = &H04000000
	SHCNE_ASSOCCHANGED = &H08000000
	SHCNE_DISKEVENTS = &H0002381F
	SHCNE_GLOBALEVENTS = &H0C0581E0 ' Events that dont match pidls first
	SHCNE_ALLEVENTS = &H7FFFFFFF
	SHCNE_INTERRUPT = &H80000000 ' The presence of this flag indicates
End Enum
Public Enum SHCN_ExtendedEvents
	SHCNEE_ORDERCHANGED = 2 ' pidl2 is the changed folder
	SHCNEE_WININETCHANGED = 3 ' dwItem2 contains CACHE_NOTIFY_* bits
	SHCNEE_MSI_CHANGE = 4 ' pidl2 is a SHChangeProductKeyAsIDList
	SHCNEE_MSI_UNINSTALL = 5 ' pidl2 is a SHChangeProductKeyAsIDList
	SHCNEE_PROMOTEDITEM = 6 ' pidl2 is the pidl of the Promoted item
	SHCNEE_DEMOTEDITEM = 7 ' pidl2 is the pidl of the demoted item
	SHCNEE_ALIASINUSE = 8 ' some alias style folder is now being used
	SHCNEE_SHORTCUTINVOKE = 9 ' an app has been launched via a shortcut
	'  pidl1 = SHShortcutInvokeAsIDList, pidl2=unused
	SHCNEE_PINLISTCHANGED = 10 ' a change was made to the pin list
	'  pidl1 = SHChangeDWORDAsIDList, pidl2=unused
	SHCNEE_USERINFOCHANGED = 11 ' A user picture was updated. pidl1 = SHChangeDWORDAsIDList, pidl2=unused
	SHCNEE_UPDATEFOLDERLOCATION = 12 ' a special folder changed pidl1 = {SHChangeDWORDAsIDList, csidlFolder}, pidl2=unused
End Enum
Public Enum SHCN_Flags
	SHCNF_IDLIST = &H0000 ' LPITEMIDLIST
	SHCNF_PATHA = &H0001 ' path name
	SHCNF_PRINTERA = &H0002 ' printer friendly name
	SHCNF_DWORD = &H0003 ' DWORD
	SHCNF_PRINTJOBA = &H0004 ' dwItem1: printer name
	'  dwItem2: SHCNF_PRINTJOB_DATA
	SHCNF_PATHW = &H0005 ' path name
	SHCNF_PRINTERW = &H0006 ' printer friendly name
	SHCNF_PRINTJOBW = &H0007 ' dwItem1: printer name        ;Internal
	'  dwItem2: SHCNF_PRINTJOB_DATA ;Internal
	SHCNF_INSTRUMENT = &H0080 ' dwItem1: LPSHCNF_INSTRUMENT  ;Internal
	SHCNF_TYPE = &H00FF
	SHCNF_FLUSH = &H1000
	SHCNF_FLUSHNOWAIT = &H3000 ' includes SHCNF_FLUSH
	SHCNF_NOTIFYRECURSIVE = &H10000 ' Notify clients registered for any child
	SHCNF_PATH = &H0005 '= SHCNF_PATHW,
	SHCNF_PRINTER = &H0006 ' = SHCNF_PRINTERW,
End Enum
Public Type SHNOTIFYSTRUCT
	dwItem1 As LONGPtr 'pidl
	dwItem2 As LONGPtr 'pidl
End Type
Public Enum FILEOP
	FO_MOVE = &H0001
	FO_COPY = &H0002
	FO_DELETE = &H0003
	FO_RENAME = &H0004
End Enum
Public Enum FILEOP_FLAGS
	FOF_MULTIDESTFILES = &H0001
	FOF_CONFIRMMOUSE = &H0002
	FOF_SILENT = &H0004
	FOF_RENAMEONCOLLISION = &H0008
	FOF_NOCONFIRMATION = &H0010
	FOF_WANTMAPPINGHANDLE = &H0020
	FOF_ALLOWUNDO = &H0040
	FOF_FILESONLY = &H0080
	FOF_SIMPLEPROGRESS = &H0100
	FOF_NOCONFIRMMKDIR = &H0200
	FOF_NOERRORUI = &H0400
	FOF_NOCOPYSECURITYATTRIBS = &H0800
	FOF_NORECURSION = &H1000
	FOF_NO_CONNECTED_ELEMENTS = &H2000
	FOF_WANTNUKEWARNING = &H4000
	FOF_NORECURSEREPARSE = &H8000
End Enum
Public Enum SystemMetrics
	SM_CXSCREEN = 0 ' 0x00
	SM_CYSCREEN = 1 ' 0x01
	SM_CXVSCROLL = 2 ' 0x02
	SM_CYHSCROLL = 3 ' 0x03
	SM_CYCAPTION = 4 ' 0x04
	SM_CXBORDER = 5 ' 0x05
	SM_CYBORDER = 6 ' 0x06
	SM_CXDLGFRAME = 7 ' 0x07
	SM_CXFIXEDFRAME = 7 ' 0x07
	SM_CYDLGFRAME = 8 ' 0x08
	SM_CYFIXEDFRAME = 8 ' 0x08
	SM_CYVTHUMB = 9 ' 0x09
	SM_CXHTHUMB = 10 ' 0x0A
	SM_CXICON = 11 ' 0x0B
	SM_CYICON = 12 ' 0x0C
	SM_CXCURSOR = 13 ' 0x0D
	SM_CYCURSOR = 14 ' 0x0E
	SM_CYMENU = 15 ' 0x0F
	SM_CXFULLSCREEN = 16 ' 0x10
	SM_CYFULLSCREEN = 17 ' 0x11
	SM_CYKANJIWINDOW = 18 ' 0x12
	SM_MOUSEPRESENT = 19 ' 0x13
	SM_CYVSCROLL = 20 ' 0x14
	SM_CXHSCROLL = 21 ' 0x15
	SM_DEBUG = 22 ' 0x16
	SM_SWAPBUTTON = 23 ' 0x17
	SM_CXMIN = 28 ' 0x1C
	SM_CYMIN = 29 ' 0x1D
	SM_CXSIZE = 30 ' 0x1E
	SM_CYSIZE = 31 ' 0x1F
	SM_CXSIZEFRAME = 32 ' 0x20
	SM_CXFRAME = 32 ' 0x20
	SM_CYSIZEFRAME = 33 ' 0x21
	SM_CYFRAME = 33 ' 0x21
	SM_CXMINTRACK = 34 ' 0x22
	SM_CYMINTRACK = 35 ' 0x23
	SM_CXDOUBLECLK = 36 ' 0x24
	SM_CYDOUBLECLK = 37 ' 0x25
	SM_CXICONSPACING = 38 ' 0x26
	SM_CYICONSPACING = 39 ' 0x27
	SM_MENUDROPALIGNMENT = 40 ' 0x28
	SM_PENWINDOWS = 41 ' 0x29
	SM_DBCSENABLED = 42 ' 0x2A
	SM_CMOUSEBUTTONS = 43 ' 0x2B
	SM_SECURE = 44 ' 0x2C
	SM_CXEDGE = 45 ' 0x2D
	SM_CYEDGE = 46 ' 0x2E
	SM_CXMINSPACING = 47 ' 0x2F
	SM_CYMINSPACING = 48 ' 0x30
	SM_CXSMICON = 49 ' 0x31
	SM_CYSMICON = 50 ' 0x32
	SM_CYSMCAPTION = 51 ' 0x33
	SM_CXSMSIZE = 52 ' 0x34
	SM_CYSMSIZE = 53 ' 0x35
	SM_CXMENUSIZE = 54 ' 0x36
	SM_CYMENUSIZE = 55 ' 0x37
	SM_ARRANGE = 56 ' 0x38
	SM_CXMINIMIZED = 57 ' 0x39
	SM_CYMINIMIZED = 58 ' 0x3A
	SM_CXMAXTRACK = 59 ' 0x3B
	SM_CYMAXTRACK = 60 ' 0x3C
	SM_CXMAXIMIZED = 61 ' 0x3D
	SM_CYMAXIMIZED = 62 ' 0x3E
	SM_NETWORK = 63 ' 0x3F
	SM_CLEANBOOT = 67 ' 0x43
	SM_CXDRAG = 68 ' 0x44
	SM_CYDRAG = 69 ' 0x45
	SM_SHOWSOUNDS = 70 ' 0x46
	SM_CXMENUCHECK = 71 ' 0x47
	SM_CYMENUCHECK = 72 ' 0x48
	SM_SLOWMACHINE = 73 ' 0x49
	SM_MIDEASTENABLED = 74 ' 0x4A
	SM_MOUSEWHEELPRESENT = 75 ' 0x4B
	SM_XVIRTUALSCREEN = 76 ' 0x4C
	SM_YVIRTUALSCREEN = 77 ' 0x4D
	SM_CXVIRTUALSCREEN = 78 ' 0x4E
	SM_CYVIRTUALSCREEN = 79 ' 0x4F
	SM_CMONITORS = 80 ' 0x50
	SM_SAMEDISPLAYFORMAT = 81 ' 0x51
	SM_IMMENABLED = 82 ' 0x52
	SM_CXFOCUSBORDER = 83 ' 0x53
	SM_CYFOCUSBORDER = 84 ' 0x54
	SM_TABLETPC = 86 ' 0x56
	SM_MEDIACENTER = 87 ' 0x57
	SM_STARTER = 88 ' 0x58
	SM_SERVERR2 = 89 ' 0x59
	SM_MOUSEHORIZONTALWHEELPRESENT = 91 ' 0x5B
	SM_CXPADDEDBORDER = 92 ' 0x5C
	SM_DIGITIZER = 94 ' 0x5E
	SM_MAXIMUMTOUCHES = 95 ' 0x5F
	SM_REMOTESESSION = &H1000 ' 0x1000
	SM_SHUTTINGDOWN = &H2000 ' 0x2000
	SM_REMOTECONTROL = &H2001 ' 0x2001
	SM_CONVERTABLESLATEMODE = &H2003
	SM_SYSTEMDOCKED = &H2004
End Enum
Public Type NMHDR
    hWndFrom                    As LongPtr
    IDFrom                      As LongPtr
    Code                        As Long
End Type

Public Enum GWL_INDEX
	GWL_WNDPROC = (-4)
	GWL_HINSTANCE = (-6)
	GWL_HWNDPARENT = (-8)
	GWL_ID = (-12)
	GWL_STYLE = (-16)
	GWL_EXSTYLE = (-20)
	GWL_USERDATA = (-21)
End Enum

Public Enum WindowMessages
	WM_ACTIVATE = &H0006
	WM_ACTIVATEAPP = &H001C
	WM_AFXFIRST = &H0360
	WM_AFXLAST = &H037F
	WM_APP = &H8000
	WM_ASKCBFORMATNAME = &H030C
	WM_CANCELJOURNAL = &H004B
	WM_CANCELMODE = &H001F
	WM_CAPTURECHANGED = &H0215
	WM_CHANGECBCHAIN = &H030D
	WM_CHANGEUISTATE = &H0127
	WM_CHAR = &H0102
	WM_CHARTOITEM = &H002F
	WM_CHILDACTIVATE = &H0022
	WM_CLEAR = &H0303
	WM_CLOSE = &H0010
	WM_COMMAND = &H0111
	WM_COMPACTING = &H0041
	WM_COMPAREITEM = &H0039
	WM_CONTEXTMENU = &H007B
	WM_COPY = &H0301
	WM_COPYDATA = &H004A
	WM_CREATE = &H0001
	WM_CTLCOLORBTN = &H0135
	WM_CTLCOLORDLG = &H0136
	WM_CTLCOLOREDIT = &H0133
	WM_CTLCOLORLISTBOX = &H0134
	WM_CTLCOLORMSGBOX = &H0132
	WM_CTLCOLORSCROLLBAR = &H0137
	WM_CTLCOLORSTATIC = &H0138
	WM_CUT = &H0300
	WM_DEADCHAR = &H0103
	WM_DELETEITEM = &H002D
	WM_DESTROY = &H0002
	WM_DESTROYCLIPBOARD = &H0307
	WM_DEVICECHANGE = &H0219
	WM_DEVMODECHANGE = &H001B
	WM_DISPLAYCHANGE = &H007E
	WM_DRAWCLIPBOARD = &H0308
	WM_DRAWITEM = &H002B
	WM_DROPFILES = &H0233
	WM_ENABLE = &H000A
	WM_ENDSESSION = &H0016
	WM_ENTERIDLE = &H0121
	WM_ENTERMENULOOP = &H0211
	WM_ENTERSIZEMOVE = &H0231
	WM_ERASEBKGND = &H0014
	WM_EXITMENULOOP = &H0212
	WM_EXITSIZEMOVE = &H0232
	WM_FONTCHANGE = &H001D
	WM_GETDLGCODE = &H0087
	WM_GETFONT = &H0031
	WM_GETHOTKEY = &H0033
	WM_GETICON = &H007F
	WM_GETMINMAXINFO = &H0024
	WM_GETOBJECT = &H003D
	WM_GETTEXT = &H000D
	WM_GETTEXTLENGTH = &H000E
	WM_HANDHELDFIRST = &H0358
	WM_HANDHELDLAST = &H035F
	WM_HELP = &H0053
	WM_HOTKEY = &H0312
	WM_HSCROLL = &H0114
	WM_HSCROLLCLIPBOARD = &H030E
	WM_ICONERASEBKGND = &H0027
	WM_IME_CHAR = &H0286
	WM_IME_COMPOSITION = &H010F
	WM_IME_COMPOSITIONFULL = &H0284
	WM_IME_CONTROL = &H0283
	WM_IME_ENDCOMPOSITION = &H010E
	WM_IME_KEYDOWN = &H0290
	WM_IME_KEYLAST = &H010F
	WM_IME_KEYUP = &H0291
	WM_IME_NOTIFY = &H0282
	WM_IME_REQUEST = &H0288
	WM_IME_SELECT = &H0285
	WM_IME_SETCONTEXT = &H0281
	WM_IME_STARTCOMPOSITION = &H010D
	WM_INITDIALOG = &H0110
	WM_INITMENU = &H0116
	WM_INITMENUPOPUP = &H0117
	WM_INPUTLANGCHANGE = &H0051
	WM_INPUTLANGCHANGEREQUEST = &H0050
	WM_KEYDOWN = &H0100
	WM_KEYFIRST = &H0100
	WM_KEYLAST = &H0108
	WM_KEYUP = &H0101
	WM_KILLFOCUS = &H0008
	WM_LBUTTONDBLCLK = &H0203
	WM_LBUTTONDOWN = &H0201
	WM_LBUTTONUP = &H0202
	WM_MBUTTONDBLCLK = &H0209
	WM_MBUTTONDOWN = &H0207
	WM_MBUTTONUP = &H0208
	WM_MDIACTIVATE = &H0222
	WM_MDICASCADE = &H0227
	WM_MDICREATE = &H0220
	WM_MDIDESTROY = &H0221
	WM_MDIGETACTIVE = &H0229
	WM_MDIICONARRANGE = &H0228
	WM_MDIMAXIMIZE = &H0225
	WM_MDINEXT = &H0224
	WM_MDIREFRESHMENU = &H0234
	WM_MDIRESTORE = &H0223
	WM_MDISETMENU = &H0230
	WM_MDITILE = &H0226
	WM_MEASUREITEM = &H002C
	WM_MENUCHAR = &H0120
	WM_MENUCOMMAND = &H0126
	WM_MENUDRAG = &H0123
	WM_MENUGETOBJECT = &H0124
	WM_MENURBUTTONUP = &H0122
	WM_MENUSELECT = &H011F
	WM_MOUSEACTIVATE = &H0021
	WM_MOUSEFIRST = &H0200
	WM_MOUSEHOVER = &H02A1
	WM_MOUSELAST = &H020D
	WM_MOUSELEAVE = &H02A3
	WM_MOUSEMOVE = &H0200
	WM_MOUSEWHEEL = &H020A
	WM_MOUSEHWHEEL = &H020E
	WM_MOVE = &H0003
	WM_MOVING = &H0216
	WM_NCACTIVATE = &H0086
	WM_NCCALCSIZE = &H0083
	WM_NCCREATE = &H0081
	WM_NCDESTROY = &H0082
	WM_NCHITTEST = &H0084
	WM_NCLBUTTONDBLCLK = &H00A3
	WM_NCLBUTTONDOWN = &H00A1
	WM_NCLBUTTONUP = &H00A2
	WM_NCMBUTTONDBLCLK = &H00A9
	WM_NCMBUTTONDOWN = &H00A7
	WM_NCMBUTTONUP = &H00A8
	WM_NCMOUSEHOVER = &H02A0
	WM_NCMOUSELEAVE = &H02A2
	WM_NCMOUSEMOVE = &H00A0
	WM_NCPAINT = &H0085
	WM_NCRBUTTONDBLCLK = &H00A6
	WM_NCRBUTTONDOWN = &H00A4
	WM_NCRBUTTONUP = &H00A5
	WM_NCXBUTTONDBLCLK = &H00AD
	WM_NCXBUTTONDOWN = &H00AB
	WM_NCXBUTTONUP = &H00AC
	WM_NCUAHDRAWCAPTION = &H00AE
	WM_NCUAHDRAWFRAME = &H00AF
	WM_NEXTDLGCTL = &H0028
	WM_NEXTMENU = &H0213
	WM_NOTIFY = &H004E
	WM_NOTIFYFORMAT = &H0055
	WM_NULL = &H0000
	WM_PAINT = &H000F
	WM_PAINTCLIPBOARD = &H0309
	WM_PAINTICON = &H0026
	WM_PALETTECHANGED = &H0311
	WM_PALETTEISCHANGING = &H0310
	WM_PARENTNOTIFY = &H0210
	WM_PASTE = &H0302
	WM_PENWINFIRST = &H0380
	WM_PENWINLAST = &H038F
	WM_POWER = &H0048
	WM_POWERBROADCAST = &H0218
	WM_PRINT = &H0317
	WM_PRINTCLIENT = &H0318
	WM_QUERYDRAGICON = &H0037
	WM_QUERYENDSESSION = &H0011
	WM_QUERYNEWPALETTE = &H030F
	WM_QUERYOPEN = &H0013
	WM_QUEUESYNC = &H0023
	WM_QUIT = &H0012
	WM_RBUTTONDBLCLK = &H0206
	WM_RBUTTONDOWN = &H0204
	WM_RBUTTONUP = &H0205
	WM_RENDERALLFORMATS = &H0306
	WM_RENDERFORMAT = &H0305
	WM_SETCURSOR = &H0020
	WM_SETFOCUS = &H0007
	WM_SETFONT = &H0030
	WM_SETHOTKEY = &H0032
	WM_SETICON = &H0080
	WM_SETREDRAW = &H000B
	WM_SETTEXT = &H000C
	WM_SETTINGCHANGE = &H001A
	WM_SHOWWINDOW = &H0018
	WM_SIZE = &H0005
	WM_SIZECLIPBOARD = &H030B
	WM_SIZING = &H0214
	WM_SPOOLERSTATUS = &H002A
	WM_STYLECHANGED = &H007D
	WM_STYLECHANGING = &H007C
	WM_SYNCPAINT = &H0088
	WM_SYSCHAR = &H0106
	WM_SYSCOLORCHANGE = &H0015
	WM_SYSCOMMAND = &H0112
	WM_SYSDEADCHAR = &H0107
	WM_SYSKEYDOWN = &H0104
	WM_SYSKEYUP = &H0105
	WM_TCARD = &H0052
	WM_TIMECHANGE = &H001E
	WM_TIMER = &H0113
	WM_UNDO = &H0304
	WM_UNICHAR = &H0109
	WM_UNINITMENUPOPUP = &H0125
	WM_USER = &H0400
	WM_USERCHANGED = &H0054
	WM_VKEYTOITEM = &H002E
	WM_VSCROLL = &H0115
	WM_VSCROLLCLIPBOARD = &H030A
	WM_WINDOWPOSCHANGED = &H0047
	WM_WINDOWPOSCHANGING = &H0046
	WM_WININICHANGE = &H001A
	WM_XBUTTONDBLCLK = &H020D
	WM_XBUTTONDOWN = &H020B
	WM_XBUTTONUP = &H020C
End Enum
Public Enum WindowStyles
	WS_OVERLAPPED = &H00000000
	WS_POPUP = &H80000000
	WS_CHILD = &H40000000
	WS_MINIMIZE = &H20000000
	WS_VISIBLE = &H10000000
	WS_DISABLED = &H08000000
	WS_CLIPSIBLINGS = &H04000000
	WS_CLIPCHILDREN = &H02000000
	WS_MAXIMIZE = &H01000000
	WS_BORDER = &H00800000
	WS_DLGFRAME = &H00400000
	WS_VSCROLL = &H00200000
	WS_HSCROLL = &H00100000
	WS_SYSMENU = &H00080000
	WS_THICKFRAME = &H00040000
	WS_GROUP = &H00020000
	WS_TABSTOP = &H00010000
	WS_MINIMIZEBOX = &H00020000
	WS_MAXIMIZEBOX = &H00010000
	WS_CAPTION = &H00C00000 '(WS_BORDER | WS_DLGFRAME),
	WS_TILED = &H00000000 'WS_OVERLAPPED,
	WS_ICONIC = &H20000000 'WS_MINIMIZE,
	WS_SIZEBOX = &H00040000 'WS_THICKFRAME,
	WS_TILEDWINDOW = &H00CF0000 'WS_OVERLAPPEDWINDOW,
	WS_OVERLAPPEDWINDOW = &H00CF0000 'WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_THICKFRAME | WS_MINIMIZEBOX | WS_MAXIMIZEBOX,
	WS_POPUPWINDOW = &H80880000 'WS_POPUP | WS_BORDER | WS_SYSMENU,
	WS_CHILDWINDOW = &H40000000 'WS_CHILD
End Enum
Public Enum WindowStylesEx
	WS_EX_DLGMODALFRAME = &H00000001
	WS_EX_NOPARENTNOTIFY = &H00000004
	WS_EX_TOPMOST = &H00000008
	WS_EX_ACCEPTFILES = &H00000010
	WS_EX_TRANSPARENT = &H00000020
	WS_EX_MDICHILD = &H00000040
	WS_EX_TOOLWINDOW = &H00000080
	WS_EX_WINDOWEDGE = &H00000100
	WS_EX_CLIENTEDGE = &H00000200
	WS_EX_CONTEXTHELP = &H00000400
	WS_EX_RIGHT = &H00001000
	WS_EX_LEFT = &H00000000
	WS_EX_RTLREADING = &H00002000
	WS_EX_LTRREADING = &H00000000
	WS_EX_LEFTSCROLLBAR = &H00004000
	WS_EX_RIGHTSCROLLBAR = &H00000000
	WS_EX_CONTROLPARENT = &H00010000
	WS_EX_STATICEDGE = &H00020000
	WS_EX_APPWINDOW = &H00040000
	WS_EX_OVERLAPPEDWINDOW = &H00000300 '(WS_EX_WINDOWEDGE | WS_EX_CLIENTEDGE),
	WS_EX_PALETTEWINDOW = &H00000188 '(WS_EX_WINDOWEDGE | WS_EX_TOOLWINDOW | WS_EX_TOPMOST),
	WS_EX_LAYERED = &H00080000
	WS_EX_NOINHERITLAYOUT = &H00100000 ' Disable inheritence of mirroring by children
	WS_EX_LAYOUTRTL = &H00400000 ' Right to left mirroring
	WS_EX_COMPOSITED = &H02000000
	WS_EX_NOACTIVATE = &H08000000
End Enum
Public Enum VirtualKeyCodes
	VK_LBUTTON = &H1
	VK_RBUTTON = &H2
	VK_CANCEL = &H3
	VK_MBUTTON = &H4
	VK_BACK = &H8
	VK_TAB = &H9
	VK_CLEAR = &HC
	VK_RETURN = &HD
	VK_SHIFT = &H10
	VK_CONTROL = &H11
	VK_MENU = &H12
	VK_PAUSE = &H13
	VK_CAPITAL = &H14
	VK_ESCAPE = &H1B
	VK_SPACE = &H20
	VK_PRIOR = &H21
	VK_NEXT = &H22
	VK_END = &H23
	VK_HOME = &H24
	VK_LEFT = &H25
	VK_UP = &H26
	VK_RIGHT = &H27
	VK_DOWN = &H28
	VK_SELECT = &H29
	VK_PRINT = &H2A
	VK_EXECUTE = &H2B
	VK_SNAPSHOT = &H2C
	VK_INSERT = &H2D
	VK_DELETE = &H2E
	VK_HELP = &H2F
	VK_0 = &H30
	VK_1 = &H31
	VK_2 = &H32
	VK_3 = &H33
	VK_4 = &H34
	VK_5 = &H35
	VK_6 = &H36
	VK_7 = &H37
	VK_8 = &H38
	VK_9 = &H39
	VK_A = &H41
	VK_B = &H42
	VK_C = &H43
	VK_D = &H44
	VK_E = &H45
	VK_F = &H46
	VK_G = &H47
	VK_H = &H48
	VK_I = &H49
	VK_J = &H4A
	VK_K = &H4B
	VK_L = &H4C
	VK_M = &H4D
	VK_N = &H4E
	VK_O = &H4F
	VK_P = &H50
	VK_Q = &H51
	VK_R = &H52
	VK_S = &H53
	VK_T = &H54
	VK_U = &H55
	VK_V = &H56
	VK_W = &H57
	VK_X = &H58
	VK_Y = &H59
	VK_Z = &H5A
	VK_STARTKEY = &H5B
	VK_CONTEXTKEY = &H5D
	VK_NUMPAD0 = &H60
	VK_NUMPAD1 = &H61
	VK_NUMPAD2 = &H62
	VK_NUMPAD3 = &H63
	VK_NUMPAD4 = &H64
	VK_NUMPAD5 = &H65
	VK_NUMPAD6 = &H66
	VK_NUMPAD7 = &H67
	VK_NUMPAD8 = &H68
	VK_NUMPAD9 = &H69
	VK_MULTIPLY = &H6A
	VK_ADD = &H6B
	VK_SEPARATOR = &H6C
	VK_SUBTRACT = &H6D
	VK_DECIMAL = &H6E
	VK_DIVIDE = &H6F
	VK_F1 = &H70
	VK_F2 = &H71
	VK_F3 = &H72
	VK_F4 = &H73
	VK_F5 = &H74
	VK_F6 = &H75
	VK_F7 = &H76
	VK_F8 = &H77
	VK_F9 = &H78
	VK_F10 = &H79
	VK_F11 = &H7A
	VK_F12 = &H7B
	VK_F13 = &H7C
	VK_F14 = &H7D
	VK_F15 = &H7E
	VK_F16 = &H7F
	VK_F17 = &H80
	VK_F18 = &H81
	VK_F19 = &H82
	VK_F20 = &H83
	VK_F21 = &H84
	VK_F22 = &H85
	VK_F23 = &H86
	VK_F24 = &H87
	VK_NUMLOCK = &H90
	VK_OEM_SCROLL = &H91
	VK_OEM_1 = &HBA
	VK_OEM_PLUS = &HBB
	VK_OEM_COMMA = &HBC
	VK_OEM_MINUS = &HBD
	VK_OEM_PERIOD = &HBE
	VK_OEM_2 = &HBF
	VK_OEM_3 = &HC0
	VK_OEM_4 = &HDB
	VK_OEM_5 = &HDC
	VK_OEM_6 = &HDD
	VK_OEM_7 = &HDE
	VK_OEM_8 = &HDF
	VK_ICO_F17 = &HE0
	VK_ICO_F18 = &HE1
	VK_OEM102 = &HE2
	VK_ICO_HELP = &HE3
	VK_ICO_00 = &HE4
	VK_ICO_CLEAR = &HE6
	VK_OEM_RESET = &HE9
	VK_OEM_JUMP = &HEA
	VK_OEM_PA1 = &HEB
	VK_OEM_PA2 = &HEC
	VK_OEM_PA3 = &HED
	VK_OEM_WSCTRL = &HEE
	VK_OEM_CUSEL = &HEF
	VK_OEM_ATTN = &HF0
	VK_OEM_FINNISH = &HF1
	VK_OEM_COPY = &HF2
	VK_OEM_AUTO = &HF3
	VK_OEM_ENLW = &HF4
	VK_OEM_BACKTAB = &HF5
	VK_ATTN = &HF6
	VK_CRSEL = &HF7
	VK_EXSEL = &HF8
	VK_EREOF = &HF9
	VK_PLAY = &HFA
	VK_ZOOM = &HFB
	VK_NONAME = &HFC
	VK_PA1 = &HFD
	VK_OEM_CLEAR = &HFE
End Enum
Public Enum SORTDIRECTION
	SORT_DESCENDING = -1
	SORT_ASCENDING = 1
End Enum

Public Enum OLEGETMONIKER
	OLEGETMONIKER_ONLYIFTHERE = 1
	OLEGETMONIKER_FORCEASSIGN = 2
	OLEGETMONIKER_UNASSIGN = 3
	OLEGETMONIKER_TEMPFORUSER = 4
End Enum
Public Enum OLEWHICHMK
	OLEWHICHMK_CONTAINER = 1
	OLEWHICHMK_OBJREL = 2
	OLEWHICHMK_OBJFULL = 3
End Enum
Public Enum USERCLASSTYPE
	USERCLASSTYPE_FULL = 1
	USERCLASSTYPE_SHORT = 2
	USERCLASSTYPE_APPNAME = 3
End Enum
Public Enum OLEMISC
	OLEMISC_RECOMPOSEONRESIZE = &H00000001
	OLEMISC_ONLYICONIC = &H00000002
	OLEMISC_INSERTNOTREPLACE = &H00000004
	OLEMISC_STATIC = &H00000008
	OLEMISC_CANTLINKINSIDE = &H00000010
	OLEMISC_CANLINKBYOLE1 = &H00000020
	OLEMISC_ISLINKOBJECT = &H00000040
	OLEMISC_INSIDEOUT = &H00000080
	OLEMISC_ACTIVATEWHENVISIBLE = &H00000100
	OLEMISC_RENDERINGISDEVICEINDEPENDENT = &H00000200
	OLEMISC_INVISIBLEATRUNTIME = &H00000400
	OLEMISC_ALWAYSRUN = &H00000800
	OLEMISC_ACTSLIKEBUTTON = &H00001000
	OLEMISC_ACTSLIKELABEL = &H00002000
	OLEMISC_NOUIACTIVATE = &H00004000
	OLEMISC_ALIGNABLE = &H00008000
	OLEMISC_SIMPLEFRAME = &H00010000
	OLEMISC_SETCLIENTSITEFIRST = &H00020000
	OLEMISC_IMEMODE = &H00040000
	OLEMISC_IGNOREACTIVATEWHENVISIBLE = &H00080000
	OLEMISC_WANTSTOMENUMERGE = &H00100000
	OLEMISC_SUPPORTSMULTILEVELUNDO = &H00200000
End Enum
Public Enum OLECLOSE
	OLECLOSE_SAVEIFDIRTY = 0
	OLECLOSE_NOSAVE = 1
	OLECLOSE_PROMPTSAVE = 2
End Enum

Public Type MSG
    hWnd        As LongPtr
    message     As Long
    wParam      As LongPtr
    lParam      As LongPtr
    Time        As Long
    PT          As POINT
End Type

Public Type OLEVERB
	lVerb As Long
	lpszVerbName As LongPtr
	fuFlags As Long
	grfAttribs As Long
End Type

Public Type PALETTEENTRY
	peRed As BYTE
	peGreen As BYTE
	peBlue As BYTE
	peFlags As BYTE
End Type
Public Type LOGPALETTE
	palVersion As Integer
	palNumEntries As integer
	palPalEntry(0) As PALETTEENTRY
End Type

Public Type OLEINPLACEFRAMEINFO
	cb As Long
	fMDIApp As Long
	hwndFrame As LongPtr
	haccel As LongPtr
	cAccelEntries As Long
End Type
Public Type OLERECT
	Left As Long
	Top As Long
	Right As Long
	Bottom As Long
End Type

Public Type OleMenuGroupWidths
	width(0 To 5) As Long
End Type

Public Type OLECLSID
	Data1 As Long
	Data2 As Integer
	Data3 As Integer
	Data4(0 To 7) As Byte
End Type

Public Type OLEPOINT
    x As Long
    y As Long
End Type


Public Declare PtrSafe Function SHCreateItemFromParsingName Lib "shell32" (ByVal pszPath As LongPtr, ByVal pbc As IBindCtx, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHCreateShellItemArrayFromIDLists Lib "shell32" (ByVal cidl As Long, ByVal rgpidl As LongPtr, ppsiItemArray As IShellItemArray) As Long
Public Declare PtrSafe Function SHCreateItemFromIDList Lib "shell32" (ByVal pidl As LongPtr, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHGetKnownFolderItem Lib "shell32" (rfid As UUID, ByVal dwFlags As KNOWN_FOLDER_FLAG, ByVal hToken As LongPtr, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHGetKnownFolderPath Lib "shell32" (rfid As UUID, ByVal dwFlags As Long, ByVal hToken As LongPtr, ppszPath As LongPtr) As Long
Public Declare PtrSafe Function SHChangeNotifyRegister Lib "shell32" (ByVal hwnd As LongPtr, ByVal fSources As SHCNRF, ByVal fEvents As SHCN_Events, ByVal wMsg As Long, ByVal cEntries As Long, lpps As SHChangeNotifyEntry) As Long
Public Declare PtrSafe Function SHChangeNotifyDeregister Lib "shell32" (ByVal ulID As Long) As Long
Public Declare PtrSafe Function SHCreateShellItemArrayFromDataObject Lib "shell32" (ByVal pdo As IDataObject, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHChangeNotification_Lock Lib "shell32" (ByVal hChange As LongPtr, ByVal dwProcId As Long, pppidl As LongPtr, plEvent As Long) As LongPtr
Public Declare PtrSafe Function SHChangeNotification_Unlock Lib "shell32" (ByVal hLock As LongPtr) As Long

Public Declare PtrSafe Function ILCombine Lib "shell32" (ByVal pidl1 As LongPtr, ByVal pidl2 As LongPtr) As LongPtr
Public Declare PtrSafe Function ILCreateFromPathW Lib "shell32" (ByVal pszPath As LongPtr) As LongPtr

Public Enum GMEM
	GMEM_FIXED = &H0000
	GMEM_MOVEABLE = &H0002
	GMEM_NOCOMPACT = &H0010
	GMEM_NODISCARD = &H0020
	GMEM_ZEROINIT = &H0040
	GMEM_MODIFY = &H0080
	GMEM_DISCARDABLE = &H0100
	GMEM_NOT_BANKED = &H1000
	GMEM_SHARE = &H2000
	GMEM_DDESHARE = &H2000
	GMEM_NOTIFY = &H4000
	GMEM_LOWER = &H1000
	GMEM_VALID_FLAGS = &H7F72
	GMEM_INVALID_HANDLE = &H8000
	GHND = &H42
	GPTR = &H40
	GMEM_DISCARDED = &H4000
	GMEM_LOCKCOUNT = &H00FF
End Enum
Public Declare PtrSafe Function GlobalAlloc Lib "kernel32" (ByVal uFlags As GMEM, ByVal dwBytes As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalFree Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalLock Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalUnlock Lib "kernel32" (ByVal hMem As LongPtr) As Long

Public Declare PtrSafe Sub ReleaseStgMedium Lib "ole32" (pStg As STGMEDIUM)

Public Declare PtrSafe Function CreateWindowExW Lib "user32" (ByVal dwExStyle As Long, ByVal lpClassName As LongPtr, ByVal lpWindowName As LongPtr, ByVal dwStyle As Long, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hMenu As LongPtr, ByVal hInstance As LongPtr, lpParam As Any) As LongPtr

End Module